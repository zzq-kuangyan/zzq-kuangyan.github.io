{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/1.png","path":"img/1.png","modified":0,"renderable":0},{"_id":"source/img/image-20240911234004466.png","path":"img/image-20240911234004466.png","modified":0,"renderable":0},{"_id":"source/img/image-20240911233804427.png","path":"img/image-20240911233804427.png","modified":0,"renderable":0},{"_id":"source/img/image-20240911234722046.png","path":"img/image-20240911234722046.png","modified":0,"renderable":0},{"_id":"themes/maple/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/maple/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/maple/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/maple/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/maple/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/maple/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/maple/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/maple/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/clipboard.min.js","path":"lib/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/iconify-icon.min.js","path":"lib/iconify-icon.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/fancybox/fancybox.min.css","path":"lib/fancybox/fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/fancybox/fancybox.umd.min.js","path":"lib/fancybox/fancybox.umd.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/nprogress/nprogress.css","path":"lib/nprogress/nprogress.css","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/nprogress/nprogress.js","path":"lib/nprogress/nprogress.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.js","path":"lib/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.css","path":"lib/tocbot/tocbot.min.css","modified":0,"renderable":1},{"_id":"source/img/image-20241005192256436.png","path":"img/image-20241005192256436.png","modified":0,"renderable":0},{"_id":"source/img/image-20241005193544038.png","path":"img/image-20241005193544038.png","modified":0,"renderable":0},{"_id":"source/img/image-20241006123230093.png","path":"img/image-20241006123230093.png","modified":0,"renderable":0},{"_id":"source/img/image-20241006172059609.png","path":"img/image-20241006172059609.png","modified":0,"renderable":0},{"_id":"source/img/image-20241006090215878.png","path":"img/image-20241006090215878.png","modified":0,"renderable":0},{"_id":"source/img/image-20241014020343184.png","path":"img/image-20241014020343184.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_drafts/test.md","hash":"5e2366d84f43370ad3d5ac34576f152d419a7bfd","modified":1726057508537},{"_id":"source/category/index.md","hash":"557d4fff656877dd0c28fd8294675eb9a39d1700","modified":1726119254724},{"_id":"source/_posts/.~程序 内存 进程 线程 浏览器和JavaScript和事件循环.md","hash":"f46a1f54beb908543ff6b25ab37beb6162c6d352","modified":1726096877837},{"_id":"source/_posts/1环.md","hash":"c8141aaadd046fb0428e4a3c9523ebd38ecd3ec9","modified":1726097211118},{"_id":"source/_posts/20240911.md","hash":"51445dd6ba3fc52b2b5a2f1a617854aa4d2aa84d","modified":1726121142850},{"_id":"source/img/image-20240911233804427.png","hash":"015d6bb31fc40514cd1075df87c9961a4279f495","modified":1726069084448},{"_id":"source/tag/index.md","hash":"78c69fcf49512478babfbda784d6e5626246a1a7","modified":1726119303615},{"_id":"source/img/image-20240911234004466.png","hash":"1ad9ca5d474b06c2e180918db7ea590ac19cb954","modified":1726069204550},{"_id":"source/img/image-20240911234722046.png","hash":"83d07f44f0a1e68bd72795daecc7b9b9e7e78d41","modified":1726069642144},{"_id":"themes/maple/.editorconfig","hash":"b16f01a7b04ad512e15ebb32c5786d432a536779","modified":1726055817403},{"_id":"themes/maple/.gitignore","hash":"67656f75e8113a4275ba5ef394b7662fab3ebea0","modified":1726055817407},{"_id":"themes/maple/LICENSE","hash":"632b916dd7e4f5c11790ab808388cda6610210ed","modified":1726055817422},{"_id":"themes/maple/README.zh-CN.md","hash":"f5493199a39bcb94ab8ddc7d7f7fa044988e2240","modified":1726055817428},{"_id":"themes/maple/README.md","hash":"1548880df88b582c523c0adec10b42805d3b3986","modified":1726055817427},{"_id":"themes/maple/_config.yml","hash":"b05144a2dfbe028697c319f1199899658e9a7181","modified":1726154552690},{"_id":"themes/maple/package-lock.json","hash":"adacc0bad40a537c1c68ce5654474d093871f55c","modified":1726055817478},{"_id":"themes/maple/package.json","hash":"a400f031060d969c42cd4fdfa5b8d8df9a8766a0","modified":1726055817479},{"_id":"themes/maple/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1726055817431},{"_id":"themes/maple/languages/default.yml","hash":"da38f00bb45a318f118db0d74df24a137351777e","modified":1726055817433},{"_id":"themes/maple/languages/en.yml","hash":"72066419d6682a017c97910921ade125f21b04cd","modified":1726055817435},{"_id":"themes/maple/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1726055817437},{"_id":"themes/maple/languages/es.yml","hash":"1e581098303181ed7927827d2388990f495cc873","modified":1726055817436},{"_id":"themes/maple/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1726055817439},{"_id":"themes/maple/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1726055817439},{"_id":"themes/maple/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1726055817444},{"_id":"themes/maple/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1726055817441},{"_id":"themes/maple/languages/no.yml","hash":"182bd9ea76313ec9dc769b5dd2845c0d1c56e3a0","modified":1726055817442},{"_id":"themes/maple/languages/ru.yml","hash":"50d08403ca204fba074f616b0d054a657f8d642f","modified":1726055817445},{"_id":"themes/maple/languages/zh-CN.yml","hash":"e41d1e0e3a9e15c30b7142491bed39dc50371e96","modified":1726055817446},{"_id":"themes/maple/languages/zh-TW.yml","hash":"d2cb9d5d8a4a80479547da0bb63e2feee0fffe47","modified":1726055817447},{"_id":"themes/maple/layout/archive.ejs","hash":"eaa27f97ddac9f3604d635fcfc6d624dc0ef5dcc","modified":1726055817472},{"_id":"themes/maple/layout/category.ejs","hash":"a2a5e2a2dbcec6adb32b890b9fbe52c9afa56845","modified":1726055817473},{"_id":"themes/maple/layout/layout.ejs","hash":"83092233a75ce3d5a9b60b4b3776ce15effe7e72","modified":1726055817475},{"_id":"themes/maple/layout/index.ejs","hash":"d4bd174f3b8136034df484fa26ec10eae7ad7432","modified":1726055817474},{"_id":"themes/maple/layout/post.ejs","hash":"67f2db7c08f3208cd87db2ec793898b29640f874","modified":1726055817476},{"_id":"themes/maple/layout/tag.ejs","hash":"e2dac7c1488f863735487dbe68f95b66c31fbde8","modified":1726055817477},{"_id":"themes/maple/source/favicon.ico","hash":"8ede8a7e8edefbd78bb978d781a502f696c32be9","modified":1726055817509},{"_id":"themes/maple/scripts/mermaid.js","hash":"778f3daf90edab9bd5c007cfb131e69e3e65709f","modified":1726055817482},{"_id":"themes/maple/layout/_partial/footer.ejs","hash":"d5a5fc05cc649584fc5cb24fa98e9fd510dc0f2e","modified":1726055817451},{"_id":"themes/maple/scripts/echarts.js","hash":"2c5a1439a12b3c3ab3fd51b3572748a0ccd8667a","modified":1726055817481},{"_id":"themes/maple/scripts/wordcount.js","hash":"d1c45c18bc63c144f02f3400c21b179534ae99ce","modified":1726055817483},{"_id":"themes/maple/layout/_plugins/baidu-analytics.ejs","hash":"5d651a50ab521334b3cc0bff34ce3de3e76ac750","modified":1726055817458},{"_id":"themes/maple/layout/_partial/after-footer.ejs","hash":"0978f5a247ef2e6c17cb368015a5a90cdd1a32ea","modified":1726055817451},{"_id":"themes/maple/layout/_partial/head.ejs","hash":"63e151a0e97f94559d4bf0cb8419a06055842c2f","modified":1726055817453},{"_id":"themes/maple/layout/_partial/header.ejs","hash":"181adc8339d2e0df5b141f8abbdc76754be8fff9","modified":1726055817454},{"_id":"themes/maple/layout/_partial/paginator.ejs","hash":"7c64dd99baf13eb3c1b25435f3617635f351dbad","modified":1726055817455},{"_id":"themes/maple/layout/_partial/toc.ejs","hash":"41a8f1ebc2d7e304439d656e4d99ec28caf2ede5","modified":1726055817456},{"_id":"themes/maple/layout/_plugins/busuanzi.ejs","hash":"a6130b1c137b5a2af1cd2e9d6bf7eeabe780db0a","modified":1726055817459},{"_id":"themes/maple/layout/_plugins/fancybox.ejs","hash":"4ef371acbfc1972e020b1f91ec2a17c738d2d42b","modified":1726055817462},{"_id":"themes/maple/layout/_plugins/giscus.ejs","hash":"d6f97ceb3ccfcedd61ac7890c5ca46f252f73802","modified":1726055817463},{"_id":"themes/maple/layout/_plugins/disqusjs.ejs","hash":"5f9b22b65eb828e3af178379c3d5be56d93a7aaa","modified":1726055817460},{"_id":"themes/maple/layout/_plugins/google-analytics.ejs","hash":"a8a6e445d6016bfd8ae657d33c213ec828612184","modified":1726055817464},{"_id":"themes/maple/layout/_plugins/maple.ejs","hash":"68ce69e63ead68d7b6e742b114ced2dcd4aacd98","modified":1726055817465},{"_id":"themes/maple/layout/_plugins/mermaid.ejs","hash":"804c36256f9232a1fe6f308e06ae89642fe0eb1b","modified":1726055817467},{"_id":"themes/maple/source/css/highlight.styl","hash":"83ae52cb1af7948443dead20cee63be9ac17acd3","modified":1726055817493},{"_id":"themes/maple/layout/_plugins/nprogress.ejs","hash":"b9696030ae715421088dc0c62d2b705efe9c3505","modified":1726055817469},{"_id":"themes/maple/layout/_plugins/mathjax.ejs","hash":"c358356a7595b5e1fe1d65aee10616eec8eb00e7","modified":1726055817466},{"_id":"themes/maple/layout/_plugins/tailwindcss.ejs","hash":"3bc366434255a72d0447c88af03abc1c34c128a7","modified":1726055817469},{"_id":"themes/maple/layout/_plugins/theme.ejs","hash":"ce1aae063cfc761d9b4f1d3317dad83ea3bee531","modified":1726055817470},{"_id":"themes/maple/source/css/main.styl","hash":"8f94a8f6ffff1ebf9bbd72be9d34d996fff2aca4","modified":1726055817507},{"_id":"themes/maple/source/js/main.js","hash":"d71026032c622228b1390c2dde719c1baffa2693","modified":1726055817527},{"_id":"themes/maple/layout/_plugins/tocbot.ejs","hash":"e17e921d40c71405a37ee3c782b7584f8b339653","modified":1726055817471},{"_id":"themes/maple/source/images/logo.svg","hash":"1b7a73d948e593dcec7549d63e5ac60ad6db6a8f","modified":1726055817518},{"_id":"themes/maple/source/img/logo.svg","hash":"1de387a7b22ee87bd509ded9230d647b7ec599b3","modified":1726055817526},{"_id":"themes/maple/source/lib/clipboard.min.js","hash":"91d8fe48e42d7d985918d4f244f6e7e3cc5adc2d","modified":1726055817530},{"_id":"themes/maple/source/lib/fancybox/fancybox.min.css","hash":"faa1beb3cde9b3abf714bf1b8410eb71199e798d","modified":1726055817532},{"_id":"themes/maple/source/lib/iconify-icon.min.js","hash":"014e6de8308a10051823d39ba49834ff18e4dba7","modified":1726055817535},{"_id":"themes/maple/source/lib/nprogress/nprogress.css","hash":"6737420c595d5b5609a70f76cfb641a63d522e43","modified":1726055817538},{"_id":"themes/maple/source/lib/nprogress/nprogress.js","hash":"e99cc7e1e3245a9d00882f9a370dd6dd105cb477","modified":1726055817539},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.js","hash":"30be41afb1f21ae821a143d74beab47094bc87a3","modified":1726055817543},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.css","hash":"febfeedac017dce90bbbaece9d775a7ec9c7c37f","modified":1726055817542},{"_id":"themes/maple/source/lib/jquery.min.js","hash":"f694238d616f579a0690001f37984af430c19963","modified":1726055817537},{"_id":"themes/maple/source/lib/fancybox/fancybox.umd.min.js","hash":"91f17b14286c64506ed5e214d7e31209d34940c0","modified":1726055817534},{"_id":"source/img/1.png","hash":"5556c012d36b1f21b38ef7e7f378a51474aecc10","modified":1726066161899},{"_id":"themes/maple/source/images/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1726055817517},{"_id":"themes/maple/source/img/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1726055817525},{"_id":"public/tag/index.html","hash":"61f5515275cf1fffa407afcdacebac35bf98847c","modified":1730463612807},{"_id":"public/category/index.html","hash":"6b8095fae8dfcb0b6bfb6ccf1c586639789ccb8f","modified":1730463612807},{"_id":"public/2024/09/11/20240911/index.html","hash":"1e8621c7fce497bb6a856fcfee4e4cdb310418ad","modified":1726121159344},{"_id":"public/archives/index.html","hash":"a151036efbc0523cc4edaaffa985113fc08ce895","modified":1730465616501},{"_id":"public/2024/09/12/1环/index.html","hash":"63b4345bdec63e0cc2e6a81833ec40f9be95843f","modified":1728128253819},{"_id":"public/archives/2024/index.html","hash":"6ea3e840f890695fb005053486c96b6343a736a6","modified":1730465616501},{"_id":"public/archives/2024/09/index.html","hash":"077c0050cbaf641609ffb3078abdb325b0093e30","modified":1728128253819},{"_id":"public/tags/Injury-Fight-Shocking/index.html","hash":"5ec43775006deb43929fd9423010acaeb1519b73","modified":1726120950317},{"_id":"public/index.html","hash":"0f5c454c35b6fc4cdad33b53e34670351b37671f","modified":1730465616501},{"_id":"public/img/image-20240911233804427.png","hash":"015d6bb31fc40514cd1075df87c9961a4279f495","modified":1726120950317},{"_id":"public/images/logo.svg","hash":"1b7a73d948e593dcec7549d63e5ac60ad6db6a8f","modified":1726120950317},{"_id":"public/favicon.ico","hash":"8ede8a7e8edefbd78bb978d781a502f696c32be9","modified":1726120950317},{"_id":"public/img/logo.svg","hash":"1de387a7b22ee87bd509ded9230d647b7ec599b3","modified":1726120950317},{"_id":"public/css/highlight.css","hash":"58217c19313bd9b12b768a4fcd09e66a980fea2c","modified":1726120950317},{"_id":"public/js/main.js","hash":"c06a89f631ac37cc3acde2ce0979f6ebf6f6e6d6","modified":1726120950317},{"_id":"public/css/main.css","hash":"5a1af8c15ba4385840892d78884e7811defe4380","modified":1726120950317},{"_id":"public/lib/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1726120950317},{"_id":"public/lib/fancybox/fancybox.min.css","hash":"1564bb6a6b930a61875610c05001c4f7bfe9939a","modified":1726120950317},{"_id":"public/lib/jquery.min.js","hash":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1726120950317},{"_id":"public/lib/iconify-icon.min.js","hash":"7526cf2b54b9e657f377083129cc00c5aa4dc110","modified":1726120950317},{"_id":"public/lib/nprogress/nprogress.js","hash":"e328b676f7e93bd78cd5d31cd0899cba2a423097","modified":1726120950317},{"_id":"public/lib/nprogress/nprogress.css","hash":"d8a2825a6fb35a3eeb3743e09184c18be9dbfcdc","modified":1726120950317},{"_id":"public/lib/fancybox/fancybox.umd.min.js","hash":"e766e468e4f017b51a643648f6b4f05187c41d6b","modified":1726120950317},{"_id":"public/lib/tocbot/tocbot.min.js","hash":"4f1b40a6818fe6e955f2ce7de3b79aec4dcd0a7c","modified":1726120950317},{"_id":"public/lib/tocbot/tocbot.min.css","hash":"0029d92ce7f1a59c7c57feb6d5f80649daba3db8","modified":1726120950317},{"_id":"public/img/image-20240911234004466.png","hash":"1ad9ca5d474b06c2e180918db7ea590ac19cb954","modified":1726120950317},{"_id":"public/img/image-20240911234722046.png","hash":"83d07f44f0a1e68bd72795daecc7b9b9e7e78d41","modified":1726120950317},{"_id":"public/img/1.png","hash":"5556c012d36b1f21b38ef7e7f378a51474aecc10","modified":1726120950317},{"_id":"public/images/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1726120950317},{"_id":"public/img/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1726120950317},{"_id":"public/tags/ada/index.html","hash":"7f71b80a8b039a41391aafa05cf6e392cc64327d","modified":1726121051291},{"_id":"public/tags/123/index.html","hash":"6abaaeaadf2700db6fe5274b68ea70764c55e3c0","modified":1726121051291},{"_id":"public/tags/DataX/index.html","hash":"f136f18bc65d5e2ba8467da6943080a3dc293983","modified":1726122408179},{"_id":"public/categories/大数据/index.html","hash":"7da6d1a3be470c9d46f7f9f7742f9a0b1a236fc4","modified":1730465616501},{"_id":"source/_posts/BigData/20240911.md","hash":"9a503a60957d8c858a11140b4214ba4a0e685a73","modified":1726121906583},{"_id":"public/2024/09/11/BigData/20240911/index.html","hash":"38dce3e6d59e4b9c1c1a221a2d776d0342fa9553","modified":1726122328262},{"_id":"source/_posts/BigData/DataX/20240911.md","hash":"f5fce3fd38afc11985e75b910c4a1764ac1b506b","modified":1726122393531},{"_id":"public/2024/09/11/BigData/DataX/20240911/index.html","hash":"8f4ba27740e65a75cdb572e52387f2c88690f170","modified":1726154561358},{"_id":"public/categories/DataX/index.html","hash":"f82a34ab8c2ccee59a93855e0f3a54ac2a81b139","modified":1726122408179},{"_id":"source/_posts/BigData/数据仓库-分层结构.md","hash":"0f91ca37083e361c321f9479ee9bd8c8ab684252","modified":1728128256160},{"_id":"source/_posts/BigData/Hive on Spark/新建 文本文档.md","hash":"1c57d1093e4ec7ffc99b07fbd38f0d88d4b206ee","modified":1728206470909},{"_id":"source/img/image-20241005192256436.png","hash":"30c6cedc44be41b6158aa989c4b544ae026f0ee5","modified":1728127376449},{"_id":"source/img/image-20241005193544038.png","hash":"3caef973e87bf036e4a52e9c12ba000436f5a9d5","modified":1728128144117},{"_id":"public/2024/09/16/BigData/数据仓库-分层结构/index.html","hash":"c828ac385e23665401c1f8754cc04b1f698681b9","modified":1728206499535},{"_id":"public/2024/10/02/BigData/Hive on Spark/新建 文本文档/index.html","hash":"74f159f9f77f0eecb99440ee449b7dd6aba93cc9","modified":1728216446768},{"_id":"public/archives/2024/10/index.html","hash":"15bd0259c13e0d5751df1c6c3fb3264cf86b622b","modified":1728843484823},{"_id":"public/tags/数据仓库/index.html","hash":"d8af917206dd9e3c2ecf9e3cc597db538492c457","modified":1730465616501},{"_id":"public/tags/spark/index.html","hash":"0ca14d6e39a1e87eaaf9080a3c82514b0c1b117a","modified":1728128253819},{"_id":"public/img/image-20241005192256436.png","hash":"30c6cedc44be41b6158aa989c4b544ae026f0ee5","modified":1728128253819},{"_id":"public/img/image-20241005193544038.png","hash":"3caef973e87bf036e4a52e9c12ba000436f5a9d5","modified":1728128253819},{"_id":"source/img/image-20241006123230093.png","hash":"f5ea508dfbb8fca5ab665f7b3a3fa7fd647a820e","modified":1728189150143},{"_id":"source/img/image-20241006172059609.png","hash":"3a97157a992e0edfb82740f58fef4c33a6804fd8","modified":1728206459691},{"_id":"source/img/image-20241006090215878.png","hash":"2d80fb19e9c2a50c1dbf011967e6288ac3b07b89","modified":1728176536252},{"_id":"public/categories/Hive-on-Spark/index.html","hash":"1217571ee7563380d74bbdd43173cf9c217cbb41","modified":1728206499535},{"_id":"public/img/image-20241006172059609.png","hash":"3a97157a992e0edfb82740f58fef4c33a6804fd8","modified":1728206499535},{"_id":"public/img/image-20241006123230093.png","hash":"f5ea508dfbb8fca5ab665f7b3a3fa7fd647a820e","modified":1728206499535},{"_id":"public/img/image-20241006090215878.png","hash":"2d80fb19e9c2a50c1dbf011967e6288ac3b07b89","modified":1728206499535},{"_id":"source/_posts/hack/新建 文本.md","hash":"09afdd11854ed0d07d57cc0be9b3d284d3fa53b3","modified":1728216818864},{"_id":"public/2024/10/06/hack/新建 文本/index.html","hash":"b28c0cdbd2bb0624716f18b32dfe4131ca3eff3c","modified":1728842852711},{"_id":"public/tags/hack-apple-music/index.html","hash":"8383b2d2e3adc06ae167b3b0d02cc80551bbb641","modified":1728216570885},{"_id":"public/categories/hack/index.html","hash":"5eab361253ace6d3c6e7c40491030311ef09cf0d","modified":1728216570885},{"_id":"public/tags/hack/index.html","hash":"1467b48fcbbf5a81607062da7971822345eb69e1","modified":1728216831527},{"_id":"public/tags/apple-music/index.html","hash":"77f6836435174f2d7a8df734fbdf18aca9ddcc36","modified":1728216831527},{"_id":"source/_posts/电商数仓6.0/优惠券维度表.md","hash":"da1b1828d03383063f14e393984320fe13962b42","modified":1728842854832},{"_id":"source/img/image-20241014020343184.png","hash":"1b565b422fbf384b4175181c110737072b191dce","modified":1728842623305},{"_id":"public/2024/10/14/电商数仓6.0/优惠券维度表/index.html","hash":"05779fc5cd10fabaafef3199c9b0dc595db31d17","modified":1730465616501},{"_id":"public/tags/大数据/index.html","hash":"4619f77c02a5688d98c664c7122c435bba4286c3","modified":1730465616501},{"_id":"public/tags/电商数仓6-0/index.html","hash":"8f1d27ebe809a08ade7d588d5da5084d760a71d2","modified":1728843484823},{"_id":"public/img/image-20241014020343184.png","hash":"1b565b422fbf384b4175181c110737072b191dce","modified":1728842852711},{"_id":"source/_posts/BigData/优惠券维度表.md","hash":"e58b5761182648fa610119496a7e449446ac859c","modified":1728842932712},{"_id":"public/2024/10/14/BigData/优惠券维度表/index.html","hash":"0aac6a6bc20e80f5f185a9420d5278419c29668c","modified":1728842946343},{"_id":"public/categories/电商数仓6-0/index.html","hash":"0f31499547a3026195495ead654588e534916ca6","modified":1728842946343},{"_id":"source/_posts/BigData/大数据之HDFS.md","hash":"54b6b3354bdf13751be460b548f75d672a2fdc12","modified":1730465600506},{"_id":"public/2024/11/01/BigData/大数据之HDFS/index.html","hash":"20ba641aca6682ba07cdcee91d2fe6176b2da780","modified":1730465616501},{"_id":"public/archives/2024/11/index.html","hash":"2e0a41eec30b6b190adc68e90fbef36788bc136c","modified":1730465616501},{"_id":"public/tags/HDFS/index.html","hash":"862aa049972ed7c3f7f49fa50293d5b06f351219","modified":1730465616501}],"Category":[{"name":"BigData","_id":"cm0yvym1r0000cov28ttrbpi1"},{"name":"DataX","_id":"cm0ywpf2j00032sv23a1y63o5"},{"name":"Hive on Spark","_id":"cm1w2y6aq000198v24myf1ulk"},{"name":"hack","_id":"cm1xjgff10000jkv23jf4elbo"},{"name":"电商数仓6.0","_id":"cm27wei030000hcv25sffanwy"}],"Data":[],"Page":[{"title":"category","type":"category","layout":"category","date":"2024-09-12T05:17:49.000Z","_content":"","source":"category/index.md","raw":"---\ntitle: category\ntype: \"category\"\nlayout: \"category\"\ndate: 2024-09-12 13:17:49\n---\n","updated":"2024-09-12T05:34:14.724Z","path":"category/index.html","comments":1,"_id":"cm0yvuiog0000v8v2hd8th6xx","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tag","type":"tag","layout":"tag","date":"2024-09-12T05:32:28.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ntype: \"tag\"\nlayout: \"tag\"\ndate: 2024-09-12 13:32:28\n---\n","updated":"2024-09-12T05:35:03.615Z","path":"tag/index.html","comments":1,"_id":"cm0yvuioo0002v8v23vagbsrp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"","author":"ZQ","date":"2024-09-11T12:20:00.000Z","_content":"","source":"_drafts/test.md","raw":"title: ''\nauthor: ZQ\ntags: []\ncategories: []\ndate: 2024-09-11 20:20:00\n---\n","slug":"test","published":0,"updated":"2024-09-11T12:25:08.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm0yvuiol0001v8v263d9coc3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"程序 内存 进程 线程 浏览器和JavaScript和事件循环","_content":"\n\n\n### 进制数小知识点\n\n二进制 是 通过 10101010组成 \n\n八进制 通过 0 - 7 组成\n\n十进制 通过  0 - 9 组成 \n\n十六进制通过 0 - 9 a- f 组成\n\n### 什么是程序\n\n就是 app 和 电脑桌面上的 一些应用\n\n### 什么是内存\n\n这里的内存指的是 运行内存  不是 存储内存 cpu 会直接 读取 运行内存;\n\n为什么要有 运行内存 cpu 直接在 存储内存 上读写 不更好吗 而且 内存空间大?\n\n```bash\n如果cpu  直接读取 存储内存 非常慢 而且 存储内存的空间非常大\n```\n\n### 什么是进程\n\n什么是进程？；\n\n进程就是 我们 打开一个程序 内存空间 会给这个程序分配一个空间 运行进程\n\n### 什么是线程\n\n线程就是 在分配好的进程空间里面 由线程来运行这些 一个 程序 进程最少有一个线程(叫做主线程)\n（而浏览器是非常复杂的 浏览器 有多个进程） 浏览器最主要的三个进程 浏览器进程 网络进程 和 渲染进程\n\n### 程序 内存 进程 程序 线程  介绍\n\n 电脑桌面上对应的程序 当我们打开 程序的时候运行内存 会给 程序分配一片空间 叫 进程 每个 程序的进程空间 都是相互独立的 每个进程都最少有 一个 线程叫做主线程 来 运行这些代码\n\n### 浏览器进程\n\n 浏览器 有三个 主要的进程 浏览器进程 渲染进程 和 网络进程\n\n 而渲染主线程(渲染进程) 他 要 执行 css  html  js  所有的页面渲染\n\n### 渲染进程\n\n 渲染进程下面的 线程 有 GUI渲染线程 定时线程（定时器触发线程、）  和 交互线程（事件触发线程）\n\n### 如何理解js异步（面试题）\n\n（注意）不是浏览器线程  浏览器是 多线程的  但是 JavaScript（js） 是单线程语言\n\n```bash\nJS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。果而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行。如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。\n所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。\n```\n\n### 任务有优先级吗\n\n任务没有优先级 在信息队列中先进先出\n在信息队列中 有优先级的\n\n根据W3C的最新解释\n\n 1. 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行\n 2. 浏览器必须准备一个 微任务队列，微任务队列中的任务优先其他任务执行\n\n 在目前 chrome 中 至少包含以下队列\n\n   1. 微任务队列（优先级最高）\n   2. 交互任务队列（优先级高）\n   3. 延时任务队列（优先级中）\n\n### 模型模拟（模拟）\n\n渲染主线程 [任务1, 任务2, 任务3]\n\n微任务队列 [排队1，排队2，]（优先级最高）\n\n延时任务队列 [排队1，排队2] (优先级中)\n\n交互任务 [排队1，排队2] (优先级高)\n\n### 阐述一下 JavaScript 的事件循环（面试题）\n\n```bash\n\n事件循环 又叫做消息循环 是浏览器主线程的工作方式 在Chrome的源码中 开启一个 不会结束的for循环，每次循环从信息队列中取出第一个任务执行 而其他线程只需要在合适的时候加入队列末尾即可\n\n根据 w3c官方解释：\n 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行\n\n```\n\n### js中的计时器中 能做到精确计时吗 为什么\n\n不能 因为:\n\n1. 在受 事件循环的影响，计时的回调函数 只能在主线程空闲时间运行，因此带来偏差\n2. 在w3c标准中，计时器 超过 五层 就会出现 4毫秒的最少时间，（简单解释）\n完整解释：按照W3C标准，浏览器计时时，如果嵌套层级超过五层，则会带来4毫秒的最少时间，这样在计时时间少于4毫秒时又带来偏差\n\n# 重新整理 浏览器进程和线程\n\n浏览器进程：浏览器有六个进程分别\n\n|进程名称 |数量 |进程介绍|\n|-------|-------|-------|\n|浏览器主进程(Browser)|1|主要负责进程管理，操作界面显示，用户的交互|\n|网络进程|1|负责网络资源加载|\n|渲染进程（浏览器内核Renderer进程内部是多线程）|N|负责将 HTML、CSS 和 JavaScript 转换成用户可以交互的操作界面。默认情况下，每个Tab都会被创建一个渲染进程。且渲染进程运行在沙箱模式下。|\n|GPU进程|1|负责3D效果、动画、图片等渲染。|\n|插件进程|N|负责插件的运行和隔离。隔离插件主要是防止出现单个插件崩溃导致页面或者浏览器崩溃的情况。|\n|缓存进程(Storage Service)|1| 负责提供浏览器存储的功能。他是从主进程中分离出来的服务|\n|音频进程(Audio Service)|1|主要处理 音频和视频|\n|数字解码进程(Data Decoder Service)|N|执行image，zip等文件的解码|\n\n重点是浏览器内核（渲染进程）\n\n1. `GUI进程`\n    负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等。\n    当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行\n    注意，GUI渲染线程与JS引擎线程是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。\n\n2. `JS引擎线程`\n   也称为JS内核，负责处理Javascript脚本程序。（例如V8引擎）\n   JS引擎线程负责解析Javascript脚本，运行代码。\n   JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序\n   同样注意，GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。\n\n3. `事件触发线程`\n   归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）\n   当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件线程中\n   当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理\n   注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）\n\n4. `定时器线程`\n    传说中的setInterval与setTimeout所在线程\n    浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）\n    因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）\n    注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。\n\n5. `异步http请求线程`\n   在XMLHttpRequest在连接后是通过浏览器新开一个线程请求\n   将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。\n\nWebWorker，JS的多线程？\n\n 1. 创建Worker时，JS引擎向浏览器申请开一个子线程（子线程是浏览器开的，完全受主线程控制，而且不能操作DOM）\n 2. S引擎线程与worker线程间通过特定的方式通信（postMessage API，需要通过序列化对象来与线程交互特定的数据）\n\n所以，如果有非常耗时的工作，请单独开一个Worker线程，这样里面不管如何翻天覆地都不会影响JS引擎主线程，\n只待计算出结果后，将结果通信给主线程即可，perfect!\n\n而且注意下，JS引擎是单线程的，这一点的本质仍然未改变，Worker可以理解是浏览器给JS引擎开的外挂，专门用来解决那些大量计算问题。\n\n更多详细[https://segmentfault.com/a/1190000012925872#item-4-2]\n\n关于defer和async\n\n正常引入JavaScrip JS引擎线程执行的时，GUI线程会被挂起，所以像下图展示效果先html 解析 遇到script 下载对应的资源下载后解析资源，再重新执行渲染HTML\n\n![](https://img.kancloud.cn/81/3e/813eafdcbccd1942f5be0380b56d35b2_716x184.png)\n\nAsync -- 异步\n\nasync 运行在浏览器执行其他操作时并行去下载指定js文件一旦文件的下载完成，浏览器将立即开始执行它。因此只要文件下载完 JS 文件的执行将阻止网页/HTML 文件的当前渲染。'简单'的说解决下载，让下载和其他操作可以同步，但当下载完成后的立即执行效果依旧会阻止'html' 渲染\n\nasync不会能保证在DOMContentLoaded之前或者之后执行\n\n![](https://img.kancloud.cn/79/91/799186d005394b15600cb7e97fed8562_599x168.png)\n\nAsync 只是会同步去下载js文件 还是 会执行 javascript 组织 html渲染\n\ndefer-- 延迟（常用重要）\n\n1.defer 属性的 JS 文件将与其他文件同时下载，仅在 HTML 文件呈现完成后才开始执行下载的资\n源，而不是像 async 在资源下载完成后立即执行。 因此，延迟文件的下载和执行都不会阻塞渲\n染。\n2.defer 加载顺序将始终按照指定\n3. 它会等待DOM Tree构建完成，在DOMContentLoaded事件之前先执行defer中的代码\n4. 并不会产生所谓的获取不到dom到情况\n\n注释：DOMContentLoaded是html页面生命周期 会在DOM树执行完毕就执行, onload 在 dom构建完成 并且完成了所有的图片 样式表 脚本等资源加载完成后触发\n\n![](https://img.kancloud.cn/cf/03/cf03cd6f810ad0ec78e7d83d5279c7a3_644x204.png)\n","source":"_posts/1环.md","raw":"---\ntitle: 程序 内存 进程 线程 浏览器和JavaScript和事件循环\n---\n\n\n\n### 进制数小知识点\n\n二进制 是 通过 10101010组成 \n\n八进制 通过 0 - 7 组成\n\n十进制 通过  0 - 9 组成 \n\n十六进制通过 0 - 9 a- f 组成\n\n### 什么是程序\n\n就是 app 和 电脑桌面上的 一些应用\n\n### 什么是内存\n\n这里的内存指的是 运行内存  不是 存储内存 cpu 会直接 读取 运行内存;\n\n为什么要有 运行内存 cpu 直接在 存储内存 上读写 不更好吗 而且 内存空间大?\n\n```bash\n如果cpu  直接读取 存储内存 非常慢 而且 存储内存的空间非常大\n```\n\n### 什么是进程\n\n什么是进程？；\n\n进程就是 我们 打开一个程序 内存空间 会给这个程序分配一个空间 运行进程\n\n### 什么是线程\n\n线程就是 在分配好的进程空间里面 由线程来运行这些 一个 程序 进程最少有一个线程(叫做主线程)\n（而浏览器是非常复杂的 浏览器 有多个进程） 浏览器最主要的三个进程 浏览器进程 网络进程 和 渲染进程\n\n### 程序 内存 进程 程序 线程  介绍\n\n 电脑桌面上对应的程序 当我们打开 程序的时候运行内存 会给 程序分配一片空间 叫 进程 每个 程序的进程空间 都是相互独立的 每个进程都最少有 一个 线程叫做主线程 来 运行这些代码\n\n### 浏览器进程\n\n 浏览器 有三个 主要的进程 浏览器进程 渲染进程 和 网络进程\n\n 而渲染主线程(渲染进程) 他 要 执行 css  html  js  所有的页面渲染\n\n### 渲染进程\n\n 渲染进程下面的 线程 有 GUI渲染线程 定时线程（定时器触发线程、）  和 交互线程（事件触发线程）\n\n### 如何理解js异步（面试题）\n\n（注意）不是浏览器线程  浏览器是 多线程的  但是 JavaScript（js） 是单线程语言\n\n```bash\nJS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。果而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行。如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。\n所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。\n```\n\n### 任务有优先级吗\n\n任务没有优先级 在信息队列中先进先出\n在信息队列中 有优先级的\n\n根据W3C的最新解释\n\n 1. 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行\n 2. 浏览器必须准备一个 微任务队列，微任务队列中的任务优先其他任务执行\n\n 在目前 chrome 中 至少包含以下队列\n\n   1. 微任务队列（优先级最高）\n   2. 交互任务队列（优先级高）\n   3. 延时任务队列（优先级中）\n\n### 模型模拟（模拟）\n\n渲染主线程 [任务1, 任务2, 任务3]\n\n微任务队列 [排队1，排队2，]（优先级最高）\n\n延时任务队列 [排队1，排队2] (优先级中)\n\n交互任务 [排队1，排队2] (优先级高)\n\n### 阐述一下 JavaScript 的事件循环（面试题）\n\n```bash\n\n事件循环 又叫做消息循环 是浏览器主线程的工作方式 在Chrome的源码中 开启一个 不会结束的for循环，每次循环从信息队列中取出第一个任务执行 而其他线程只需要在合适的时候加入队列末尾即可\n\n根据 w3c官方解释：\n 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行\n\n```\n\n### js中的计时器中 能做到精确计时吗 为什么\n\n不能 因为:\n\n1. 在受 事件循环的影响，计时的回调函数 只能在主线程空闲时间运行，因此带来偏差\n2. 在w3c标准中，计时器 超过 五层 就会出现 4毫秒的最少时间，（简单解释）\n完整解释：按照W3C标准，浏览器计时时，如果嵌套层级超过五层，则会带来4毫秒的最少时间，这样在计时时间少于4毫秒时又带来偏差\n\n# 重新整理 浏览器进程和线程\n\n浏览器进程：浏览器有六个进程分别\n\n|进程名称 |数量 |进程介绍|\n|-------|-------|-------|\n|浏览器主进程(Browser)|1|主要负责进程管理，操作界面显示，用户的交互|\n|网络进程|1|负责网络资源加载|\n|渲染进程（浏览器内核Renderer进程内部是多线程）|N|负责将 HTML、CSS 和 JavaScript 转换成用户可以交互的操作界面。默认情况下，每个Tab都会被创建一个渲染进程。且渲染进程运行在沙箱模式下。|\n|GPU进程|1|负责3D效果、动画、图片等渲染。|\n|插件进程|N|负责插件的运行和隔离。隔离插件主要是防止出现单个插件崩溃导致页面或者浏览器崩溃的情况。|\n|缓存进程(Storage Service)|1| 负责提供浏览器存储的功能。他是从主进程中分离出来的服务|\n|音频进程(Audio Service)|1|主要处理 音频和视频|\n|数字解码进程(Data Decoder Service)|N|执行image，zip等文件的解码|\n\n重点是浏览器内核（渲染进程）\n\n1. `GUI进程`\n    负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等。\n    当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行\n    注意，GUI渲染线程与JS引擎线程是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。\n\n2. `JS引擎线程`\n   也称为JS内核，负责处理Javascript脚本程序。（例如V8引擎）\n   JS引擎线程负责解析Javascript脚本，运行代码。\n   JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序\n   同样注意，GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。\n\n3. `事件触发线程`\n   归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）\n   当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件线程中\n   当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理\n   注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）\n\n4. `定时器线程`\n    传说中的setInterval与setTimeout所在线程\n    浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）\n    因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）\n    注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。\n\n5. `异步http请求线程`\n   在XMLHttpRequest在连接后是通过浏览器新开一个线程请求\n   将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。\n\nWebWorker，JS的多线程？\n\n 1. 创建Worker时，JS引擎向浏览器申请开一个子线程（子线程是浏览器开的，完全受主线程控制，而且不能操作DOM）\n 2. S引擎线程与worker线程间通过特定的方式通信（postMessage API，需要通过序列化对象来与线程交互特定的数据）\n\n所以，如果有非常耗时的工作，请单独开一个Worker线程，这样里面不管如何翻天覆地都不会影响JS引擎主线程，\n只待计算出结果后，将结果通信给主线程即可，perfect!\n\n而且注意下，JS引擎是单线程的，这一点的本质仍然未改变，Worker可以理解是浏览器给JS引擎开的外挂，专门用来解决那些大量计算问题。\n\n更多详细[https://segmentfault.com/a/1190000012925872#item-4-2]\n\n关于defer和async\n\n正常引入JavaScrip JS引擎线程执行的时，GUI线程会被挂起，所以像下图展示效果先html 解析 遇到script 下载对应的资源下载后解析资源，再重新执行渲染HTML\n\n![](https://img.kancloud.cn/81/3e/813eafdcbccd1942f5be0380b56d35b2_716x184.png)\n\nAsync -- 异步\n\nasync 运行在浏览器执行其他操作时并行去下载指定js文件一旦文件的下载完成，浏览器将立即开始执行它。因此只要文件下载完 JS 文件的执行将阻止网页/HTML 文件的当前渲染。'简单'的说解决下载，让下载和其他操作可以同步，但当下载完成后的立即执行效果依旧会阻止'html' 渲染\n\nasync不会能保证在DOMContentLoaded之前或者之后执行\n\n![](https://img.kancloud.cn/79/91/799186d005394b15600cb7e97fed8562_599x168.png)\n\nAsync 只是会同步去下载js文件 还是 会执行 javascript 组织 html渲染\n\ndefer-- 延迟（常用重要）\n\n1.defer 属性的 JS 文件将与其他文件同时下载，仅在 HTML 文件呈现完成后才开始执行下载的资\n源，而不是像 async 在资源下载完成后立即执行。 因此，延迟文件的下载和执行都不会阻塞渲\n染。\n2.defer 加载顺序将始终按照指定\n3. 它会等待DOM Tree构建完成，在DOMContentLoaded事件之前先执行defer中的代码\n4. 并不会产生所谓的获取不到dom到情况\n\n注释：DOMContentLoaded是html页面生命周期 会在DOM树执行完毕就执行, onload 在 dom构建完成 并且完成了所有的图片 样式表 脚本等资源加载完成后触发\n\n![](https://img.kancloud.cn/cf/03/cf03cd6f810ad0ec78e7d83d5279c7a3_644x204.png)\n","slug":"1环","published":1,"date":"2024-09-11T23:21:34.584Z","updated":"2024-09-11T23:26:51.118Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm0yvuiop0003v8v2ae0x403e","content":"<h3 id=\"进制数小知识点\"><a href=\"#进制数小知识点\" class=\"headerlink\" title=\"进制数小知识点\"></a>进制数小知识点</h3><p>二进制 是 通过 10101010组成 </p>\n<p>八进制 通过 0 - 7 组成</p>\n<p>十进制 通过  0 - 9 组成 </p>\n<p>十六进制通过 0 - 9 a- f 组成</p>\n<h3 id=\"什么是程序\"><a href=\"#什么是程序\" class=\"headerlink\" title=\"什么是程序\"></a>什么是程序</h3><p>就是 app 和 电脑桌面上的 一些应用</p>\n<h3 id=\"什么是内存\"><a href=\"#什么是内存\" class=\"headerlink\" title=\"什么是内存\"></a>什么是内存</h3><p>这里的内存指的是 运行内存  不是 存储内存 cpu 会直接 读取 运行内存;</p>\n<p>为什么要有 运行内存 cpu 直接在 存储内存 上读写 不更好吗 而且 内存空间大?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果cpu  直接读取 存储内存 非常慢 而且 存储内存的空间非常大</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"什么是进程\"><a href=\"#什么是进程\" class=\"headerlink\" title=\"什么是进程\"></a>什么是进程</h3><p>什么是进程？；</p>\n<p>进程就是 我们 打开一个程序 内存空间 会给这个程序分配一个空间 运行进程</p>\n<h3 id=\"什么是线程\"><a href=\"#什么是线程\" class=\"headerlink\" title=\"什么是线程\"></a>什么是线程</h3><p>线程就是 在分配好的进程空间里面 由线程来运行这些 一个 程序 进程最少有一个线程(叫做主线程)<br>（而浏览器是非常复杂的 浏览器 有多个进程） 浏览器最主要的三个进程 浏览器进程 网络进程 和 渲染进程</p>\n<h3 id=\"程序-内存-进程-程序-线程-介绍\"><a href=\"#程序-内存-进程-程序-线程-介绍\" class=\"headerlink\" title=\"程序 内存 进程 程序 线程  介绍\"></a>程序 内存 进程 程序 线程  介绍</h3><p> 电脑桌面上对应的程序 当我们打开 程序的时候运行内存 会给 程序分配一片空间 叫 进程 每个 程序的进程空间 都是相互独立的 每个进程都最少有 一个 线程叫做主线程 来 运行这些代码</p>\n<h3 id=\"浏览器进程\"><a href=\"#浏览器进程\" class=\"headerlink\" title=\"浏览器进程\"></a>浏览器进程</h3><p> 浏览器 有三个 主要的进程 浏览器进程 渲染进程 和 网络进程</p>\n<p> 而渲染主线程(渲染进程) 他 要 执行 css  html  js  所有的页面渲染</p>\n<h3 id=\"渲染进程\"><a href=\"#渲染进程\" class=\"headerlink\" title=\"渲染进程\"></a>渲染进程</h3><p> 渲染进程下面的 线程 有 GUI渲染线程 定时线程（定时器触发线程、）  和 交互线程（事件触发线程）</p>\n<h3 id=\"如何理解js异步（面试题）\"><a href=\"#如何理解js异步（面试题）\" class=\"headerlink\" title=\"如何理解js异步（面试题）\"></a>如何理解js异步（面试题）</h3><p>（注意）不是浏览器线程  浏览器是 多线程的  但是 JavaScript（js） 是单线程语言</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。果而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行。如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。</span><br><span class=\"line\">所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"任务有优先级吗\"><a href=\"#任务有优先级吗\" class=\"headerlink\" title=\"任务有优先级吗\"></a>任务有优先级吗</h3><p>任务没有优先级 在信息队列中先进先出<br>在信息队列中 有优先级的</p>\n<p>根据W3C的最新解释</p>\n<ol>\n<li>每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行</li>\n<li>浏览器必须准备一个 微任务队列，微任务队列中的任务优先其他任务执行</li>\n</ol>\n<p> 在目前 chrome 中 至少包含以下队列</p>\n<ol>\n<li>微任务队列（优先级最高）</li>\n<li>交互任务队列（优先级高）</li>\n<li>延时任务队列（优先级中）</li>\n</ol>\n<h3 id=\"模型模拟（模拟）\"><a href=\"#模型模拟（模拟）\" class=\"headerlink\" title=\"模型模拟（模拟）\"></a>模型模拟（模拟）</h3><p>渲染主线程 [任务1, 任务2, 任务3]</p>\n<p>微任务队列 [排队1，排队2，]（优先级最高）</p>\n<p>延时任务队列 [排队1，排队2] (优先级中)</p>\n<p>交互任务 [排队1，排队2] (优先级高)</p>\n<h3 id=\"阐述一下-JavaScript-的事件循环（面试题）\"><a href=\"#阐述一下-JavaScript-的事件循环（面试题）\" class=\"headerlink\" title=\"阐述一下 JavaScript 的事件循环（面试题）\"></a>阐述一下 JavaScript 的事件循环（面试题）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">事件循环 又叫做消息循环 是浏览器主线程的工作方式 在Chrome的源码中 开启一个 不会结束的<span class=\"keyword\">for</span>循环，每次循环从信息队列中取出第一个任务执行 而其他线程只需要在合适的时候加入队列末尾即可</span><br><span class=\"line\"></span><br><span class=\"line\">根据 w3c官方解释：</span><br><span class=\"line\"> 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"js中的计时器中-能做到精确计时吗-为什么\"><a href=\"#js中的计时器中-能做到精确计时吗-为什么\" class=\"headerlink\" title=\"js中的计时器中 能做到精确计时吗 为什么\"></a>js中的计时器中 能做到精确计时吗 为什么</h3><p>不能 因为:</p>\n<ol>\n<li>在受 事件循环的影响，计时的回调函数 只能在主线程空闲时间运行，因此带来偏差</li>\n<li>在w3c标准中，计时器 超过 五层 就会出现 4毫秒的最少时间，（简单解释）<br>完整解释：按照W3C标准，浏览器计时时，如果嵌套层级超过五层，则会带来4毫秒的最少时间，这样在计时时间少于4毫秒时又带来偏差</li>\n</ol>\n<h1 id=\"重新整理-浏览器进程和线程\"><a href=\"#重新整理-浏览器进程和线程\" class=\"headerlink\" title=\"重新整理 浏览器进程和线程\"></a>重新整理 浏览器进程和线程</h1><p>浏览器进程：浏览器有六个进程分别</p>\n<table>\n<thead>\n<tr>\n<th>进程名称</th>\n<th>数量</th>\n<th>进程介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>浏览器主进程(Browser)</td>\n<td>1</td>\n<td>主要负责进程管理，操作界面显示，用户的交互</td>\n</tr>\n<tr>\n<td>网络进程</td>\n<td>1</td>\n<td>负责网络资源加载</td>\n</tr>\n<tr>\n<td>渲染进程（浏览器内核Renderer进程内部是多线程）</td>\n<td>N</td>\n<td>负责将 HTML、CSS 和 JavaScript 转换成用户可以交互的操作界面。默认情况下，每个Tab都会被创建一个渲染进程。且渲染进程运行在沙箱模式下。</td>\n</tr>\n<tr>\n<td>GPU进程</td>\n<td>1</td>\n<td>负责3D效果、动画、图片等渲染。</td>\n</tr>\n<tr>\n<td>插件进程</td>\n<td>N</td>\n<td>负责插件的运行和隔离。隔离插件主要是防止出现单个插件崩溃导致页面或者浏览器崩溃的情况。</td>\n</tr>\n<tr>\n<td>缓存进程(Storage Service)</td>\n<td>1</td>\n<td>负责提供浏览器存储的功能。他是从主进程中分离出来的服务</td>\n</tr>\n<tr>\n<td>音频进程(Audio Service)</td>\n<td>1</td>\n<td>主要处理 音频和视频</td>\n</tr>\n<tr>\n<td>数字解码进程(Data Decoder Service)</td>\n<td>N</td>\n<td>执行image，zip等文件的解码</td>\n</tr>\n</tbody></table>\n<p>重点是浏览器内核（渲染进程）</p>\n<ol>\n<li><p><code>GUI进程</code><br> 负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等。<br> 当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行<br> 注意，GUI渲染线程与JS引擎线程是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。</p>\n</li>\n<li><p><code>JS引擎线程</code><br>也称为JS内核，负责处理Javascript脚本程序。（例如V8引擎）<br>JS引擎线程负责解析Javascript脚本，运行代码。<br>JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序<br>同样注意，GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。</p>\n</li>\n<li><p><code>事件触发线程</code><br>归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）<br>当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件线程中<br>当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理<br>注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）</p>\n</li>\n<li><p><code>定时器线程</code><br> 传说中的setInterval与setTimeout所在线程<br> 浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）<br> 因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）<br> 注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。</p>\n</li>\n<li><p><code>异步http请求线程</code><br>在XMLHttpRequest在连接后是通过浏览器新开一个线程请求<br>将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。</p>\n</li>\n</ol>\n<p>WebWorker，JS的多线程？</p>\n<ol>\n<li>创建Worker时，JS引擎向浏览器申请开一个子线程（子线程是浏览器开的，完全受主线程控制，而且不能操作DOM）</li>\n<li>S引擎线程与worker线程间通过特定的方式通信（postMessage API，需要通过序列化对象来与线程交互特定的数据）</li>\n</ol>\n<p>所以，如果有非常耗时的工作，请单独开一个Worker线程，这样里面不管如何翻天覆地都不会影响JS引擎主线程，<br>只待计算出结果后，将结果通信给主线程即可，perfect!</p>\n<p>而且注意下，JS引擎是单线程的，这一点的本质仍然未改变，Worker可以理解是浏览器给JS引擎开的外挂，专门用来解决那些大量计算问题。</p>\n<p>更多详细[<a href=\"https://segmentfault.com/a/1190000012925872#item-4-2]\">https://segmentfault.com/a/1190000012925872#item-4-2]</a></p>\n<p>关于defer和async</p>\n<p>正常引入JavaScrip JS引擎线程执行的时，GUI线程会被挂起，所以像下图展示效果先html 解析 遇到script 下载对应的资源下载后解析资源，再重新执行渲染HTML</p>\n<p><img src=\"https://img.kancloud.cn/81/3e/813eafdcbccd1942f5be0380b56d35b2_716x184.png\"></p>\n<p>Async – 异步</p>\n<p>async 运行在浏览器执行其他操作时并行去下载指定js文件一旦文件的下载完成，浏览器将立即开始执行它。因此只要文件下载完 JS 文件的执行将阻止网页&#x2F;HTML 文件的当前渲染。’简单’的说解决下载，让下载和其他操作可以同步，但当下载完成后的立即执行效果依旧会阻止’html’ 渲染</p>\n<p>async不会能保证在DOMContentLoaded之前或者之后执行</p>\n<p><img src=\"https://img.kancloud.cn/79/91/799186d005394b15600cb7e97fed8562_599x168.png\"></p>\n<p>Async 只是会同步去下载js文件 还是 会执行 javascript 组织 html渲染</p>\n<p>defer– 延迟（常用重要）</p>\n<p>1.defer 属性的 JS 文件将与其他文件同时下载，仅在 HTML 文件呈现完成后才开始执行下载的资<br>源，而不是像 async 在资源下载完成后立即执行。 因此，延迟文件的下载和执行都不会阻塞渲<br>染。<br>2.defer 加载顺序将始终按照指定<br>3. 它会等待DOM Tree构建完成，在DOMContentLoaded事件之前先执行defer中的代码<br>4. 并不会产生所谓的获取不到dom到情况</p>\n<p>注释：DOMContentLoaded是html页面生命周期 会在DOM树执行完毕就执行, onload 在 dom构建完成 并且完成了所有的图片 样式表 脚本等资源加载完成后触发</p>\n<p><img src=\"https://img.kancloud.cn/cf/03/cf03cd6f810ad0ec78e7d83d5279c7a3_644x204.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"进制数小知识点\"><a href=\"#进制数小知识点\" class=\"headerlink\" title=\"进制数小知识点\"></a>进制数小知识点</h3><p>二进制 是 通过 10101010组成 </p>\n<p>八进制 通过 0 - 7 组成</p>\n<p>十进制 通过  0 - 9 组成 </p>\n<p>十六进制通过 0 - 9 a- f 组成</p>\n<h3 id=\"什么是程序\"><a href=\"#什么是程序\" class=\"headerlink\" title=\"什么是程序\"></a>什么是程序</h3><p>就是 app 和 电脑桌面上的 一些应用</p>\n<h3 id=\"什么是内存\"><a href=\"#什么是内存\" class=\"headerlink\" title=\"什么是内存\"></a>什么是内存</h3><p>这里的内存指的是 运行内存  不是 存储内存 cpu 会直接 读取 运行内存;</p>\n<p>为什么要有 运行内存 cpu 直接在 存储内存 上读写 不更好吗 而且 内存空间大?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果cpu  直接读取 存储内存 非常慢 而且 存储内存的空间非常大</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"什么是进程\"><a href=\"#什么是进程\" class=\"headerlink\" title=\"什么是进程\"></a>什么是进程</h3><p>什么是进程？；</p>\n<p>进程就是 我们 打开一个程序 内存空间 会给这个程序分配一个空间 运行进程</p>\n<h3 id=\"什么是线程\"><a href=\"#什么是线程\" class=\"headerlink\" title=\"什么是线程\"></a>什么是线程</h3><p>线程就是 在分配好的进程空间里面 由线程来运行这些 一个 程序 进程最少有一个线程(叫做主线程)<br>（而浏览器是非常复杂的 浏览器 有多个进程） 浏览器最主要的三个进程 浏览器进程 网络进程 和 渲染进程</p>\n<h3 id=\"程序-内存-进程-程序-线程-介绍\"><a href=\"#程序-内存-进程-程序-线程-介绍\" class=\"headerlink\" title=\"程序 内存 进程 程序 线程  介绍\"></a>程序 内存 进程 程序 线程  介绍</h3><p> 电脑桌面上对应的程序 当我们打开 程序的时候运行内存 会给 程序分配一片空间 叫 进程 每个 程序的进程空间 都是相互独立的 每个进程都最少有 一个 线程叫做主线程 来 运行这些代码</p>\n<h3 id=\"浏览器进程\"><a href=\"#浏览器进程\" class=\"headerlink\" title=\"浏览器进程\"></a>浏览器进程</h3><p> 浏览器 有三个 主要的进程 浏览器进程 渲染进程 和 网络进程</p>\n<p> 而渲染主线程(渲染进程) 他 要 执行 css  html  js  所有的页面渲染</p>\n<h3 id=\"渲染进程\"><a href=\"#渲染进程\" class=\"headerlink\" title=\"渲染进程\"></a>渲染进程</h3><p> 渲染进程下面的 线程 有 GUI渲染线程 定时线程（定时器触发线程、）  和 交互线程（事件触发线程）</p>\n<h3 id=\"如何理解js异步（面试题）\"><a href=\"#如何理解js异步（面试题）\" class=\"headerlink\" title=\"如何理解js异步（面试题）\"></a>如何理解js异步（面试题）</h3><p>（注意）不是浏览器线程  浏览器是 多线程的  但是 JavaScript（js） 是单线程语言</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。果而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行。如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。</span><br><span class=\"line\">所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"任务有优先级吗\"><a href=\"#任务有优先级吗\" class=\"headerlink\" title=\"任务有优先级吗\"></a>任务有优先级吗</h3><p>任务没有优先级 在信息队列中先进先出<br>在信息队列中 有优先级的</p>\n<p>根据W3C的最新解释</p>\n<ol>\n<li>每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行</li>\n<li>浏览器必须准备一个 微任务队列，微任务队列中的任务优先其他任务执行</li>\n</ol>\n<p> 在目前 chrome 中 至少包含以下队列</p>\n<ol>\n<li>微任务队列（优先级最高）</li>\n<li>交互任务队列（优先级高）</li>\n<li>延时任务队列（优先级中）</li>\n</ol>\n<h3 id=\"模型模拟（模拟）\"><a href=\"#模型模拟（模拟）\" class=\"headerlink\" title=\"模型模拟（模拟）\"></a>模型模拟（模拟）</h3><p>渲染主线程 [任务1, 任务2, 任务3]</p>\n<p>微任务队列 [排队1，排队2，]（优先级最高）</p>\n<p>延时任务队列 [排队1，排队2] (优先级中)</p>\n<p>交互任务 [排队1，排队2] (优先级高)</p>\n<h3 id=\"阐述一下-JavaScript-的事件循环（面试题）\"><a href=\"#阐述一下-JavaScript-的事件循环（面试题）\" class=\"headerlink\" title=\"阐述一下 JavaScript 的事件循环（面试题）\"></a>阐述一下 JavaScript 的事件循环（面试题）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">事件循环 又叫做消息循环 是浏览器主线程的工作方式 在Chrome的源码中 开启一个 不会结束的<span class=\"keyword\">for</span>循环，每次循环从信息队列中取出第一个任务执行 而其他线程只需要在合适的时候加入队列末尾即可</span><br><span class=\"line\"></span><br><span class=\"line\">根据 w3c官方解释：</span><br><span class=\"line\"> 每个任务都有一个任务类型 比如 微任务 定时任务 和 交互任务， 同一个类型的任务必须在同一个队列里面，不同的任务可以分属于不同的任务队列 在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出执行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"js中的计时器中-能做到精确计时吗-为什么\"><a href=\"#js中的计时器中-能做到精确计时吗-为什么\" class=\"headerlink\" title=\"js中的计时器中 能做到精确计时吗 为什么\"></a>js中的计时器中 能做到精确计时吗 为什么</h3><p>不能 因为:</p>\n<ol>\n<li>在受 事件循环的影响，计时的回调函数 只能在主线程空闲时间运行，因此带来偏差</li>\n<li>在w3c标准中，计时器 超过 五层 就会出现 4毫秒的最少时间，（简单解释）<br>完整解释：按照W3C标准，浏览器计时时，如果嵌套层级超过五层，则会带来4毫秒的最少时间，这样在计时时间少于4毫秒时又带来偏差</li>\n</ol>\n<h1 id=\"重新整理-浏览器进程和线程\"><a href=\"#重新整理-浏览器进程和线程\" class=\"headerlink\" title=\"重新整理 浏览器进程和线程\"></a>重新整理 浏览器进程和线程</h1><p>浏览器进程：浏览器有六个进程分别</p>\n<table>\n<thead>\n<tr>\n<th>进程名称</th>\n<th>数量</th>\n<th>进程介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>浏览器主进程(Browser)</td>\n<td>1</td>\n<td>主要负责进程管理，操作界面显示，用户的交互</td>\n</tr>\n<tr>\n<td>网络进程</td>\n<td>1</td>\n<td>负责网络资源加载</td>\n</tr>\n<tr>\n<td>渲染进程（浏览器内核Renderer进程内部是多线程）</td>\n<td>N</td>\n<td>负责将 HTML、CSS 和 JavaScript 转换成用户可以交互的操作界面。默认情况下，每个Tab都会被创建一个渲染进程。且渲染进程运行在沙箱模式下。</td>\n</tr>\n<tr>\n<td>GPU进程</td>\n<td>1</td>\n<td>负责3D效果、动画、图片等渲染。</td>\n</tr>\n<tr>\n<td>插件进程</td>\n<td>N</td>\n<td>负责插件的运行和隔离。隔离插件主要是防止出现单个插件崩溃导致页面或者浏览器崩溃的情况。</td>\n</tr>\n<tr>\n<td>缓存进程(Storage Service)</td>\n<td>1</td>\n<td>负责提供浏览器存储的功能。他是从主进程中分离出来的服务</td>\n</tr>\n<tr>\n<td>音频进程(Audio Service)</td>\n<td>1</td>\n<td>主要处理 音频和视频</td>\n</tr>\n<tr>\n<td>数字解码进程(Data Decoder Service)</td>\n<td>N</td>\n<td>执行image，zip等文件的解码</td>\n</tr>\n</tbody></table>\n<p>重点是浏览器内核（渲染进程）</p>\n<ol>\n<li><p><code>GUI进程</code><br> 负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等。<br> 当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行<br> 注意，GUI渲染线程与JS引擎线程是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。</p>\n</li>\n<li><p><code>JS引擎线程</code><br>也称为JS内核，负责处理Javascript脚本程序。（例如V8引擎）<br>JS引擎线程负责解析Javascript脚本，运行代码。<br>JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序<br>同样注意，GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。</p>\n</li>\n<li><p><code>事件触发线程</code><br>归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）<br>当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件线程中<br>当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理<br>注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）</p>\n</li>\n<li><p><code>定时器线程</code><br> 传说中的setInterval与setTimeout所在线程<br> 浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）<br> 因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）<br> 注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。</p>\n</li>\n<li><p><code>异步http请求线程</code><br>在XMLHttpRequest在连接后是通过浏览器新开一个线程请求<br>将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。</p>\n</li>\n</ol>\n<p>WebWorker，JS的多线程？</p>\n<ol>\n<li>创建Worker时，JS引擎向浏览器申请开一个子线程（子线程是浏览器开的，完全受主线程控制，而且不能操作DOM）</li>\n<li>S引擎线程与worker线程间通过特定的方式通信（postMessage API，需要通过序列化对象来与线程交互特定的数据）</li>\n</ol>\n<p>所以，如果有非常耗时的工作，请单独开一个Worker线程，这样里面不管如何翻天覆地都不会影响JS引擎主线程，<br>只待计算出结果后，将结果通信给主线程即可，perfect!</p>\n<p>而且注意下，JS引擎是单线程的，这一点的本质仍然未改变，Worker可以理解是浏览器给JS引擎开的外挂，专门用来解决那些大量计算问题。</p>\n<p>更多详细[<a href=\"https://segmentfault.com/a/1190000012925872#item-4-2]\">https://segmentfault.com/a/1190000012925872#item-4-2]</a></p>\n<p>关于defer和async</p>\n<p>正常引入JavaScrip JS引擎线程执行的时，GUI线程会被挂起，所以像下图展示效果先html 解析 遇到script 下载对应的资源下载后解析资源，再重新执行渲染HTML</p>\n<p><img src=\"https://img.kancloud.cn/81/3e/813eafdcbccd1942f5be0380b56d35b2_716x184.png\"></p>\n<p>Async – 异步</p>\n<p>async 运行在浏览器执行其他操作时并行去下载指定js文件一旦文件的下载完成，浏览器将立即开始执行它。因此只要文件下载完 JS 文件的执行将阻止网页&#x2F;HTML 文件的当前渲染。’简单’的说解决下载，让下载和其他操作可以同步，但当下载完成后的立即执行效果依旧会阻止’html’ 渲染</p>\n<p>async不会能保证在DOMContentLoaded之前或者之后执行</p>\n<p><img src=\"https://img.kancloud.cn/79/91/799186d005394b15600cb7e97fed8562_599x168.png\"></p>\n<p>Async 只是会同步去下载js文件 还是 会执行 javascript 组织 html渲染</p>\n<p>defer– 延迟（常用重要）</p>\n<p>1.defer 属性的 JS 文件将与其他文件同时下载，仅在 HTML 文件呈现完成后才开始执行下载的资<br>源，而不是像 async 在资源下载完成后立即执行。 因此，延迟文件的下载和执行都不会阻塞渲<br>染。<br>2.defer 加载顺序将始终按照指定<br>3. 它会等待DOM Tree构建完成，在DOMContentLoaded事件之前先执行defer中的代码<br>4. 并不会产生所谓的获取不到dom到情况</p>\n<p>注释：DOMContentLoaded是html页面生命周期 会在DOM树执行完毕就执行, onload 在 dom构建完成 并且完成了所有的图片 样式表 脚本等资源加载完成后触发</p>\n<p><img src=\"https://img.kancloud.cn/cf/03/cf03cd6f810ad0ec78e7d83d5279c7a3_644x204.png\"></p>\n"},{"title":"在使用DataX时发生的一些问题","_content":"\n\n\n### 1.在第一次安装后测试自检时报错datax/plugin/reader/._xxxx/plugin.json]不存在\n\n**自检代码：**\n\n`python /opt/module/datax/bin/datax.py /opt/module/datax/job/job.json`\n\n**报错：**\n\n `[main] WARN  ConfigParser - 插件[streamreader,streamwriter]加载失败，1s后重试... Exception:Code:[Common-00], Describe:[您提供的配置文件存在错误信息，请检查您的作业配置 .] - 配置信息错误，您提供的配置文件[/home/hadoop/apps/datax/plugin/reader/._drdsreader/plugin.json]不存在. 请检查您的配置文件.` \n\n**解决方法：**\n\n删除datax/plugin目录下自带的临时文件\n\n**代码如下：**\n\nfind ./datax/plugin/* -type f -name \".*er\" | [xargs]\n\n### MySQL写数据到HDFS时，执行datax脚本报错\n\n![error](./img/1.png)\n\n然而在我折腾了一下午jdbc的配置后（在navicat上测试远程连接，idea上用jdbc远程连接成功）发现无事发生，还是同样的报错.....\n\n![navicat](../img/image-20240911233804427.png)\n\n![idea中JDBC测试](../img/image-20240911234004466.png)\n\n🤡\n\n怀疑虚拟机的JDBC驱动没装，在官网上下好包后在虚拟机装上发现还是同样的报错，最后发现datax的依赖库中jdbc版本太低，导致无法远程连接（官网下载最新的包替换问题解决）...😅\n\n![我请问呢？](../img/image-20240911234722046.png)\n\n","source":"_posts/BigData/DataX/20240911.md","raw":"---\ntitle: 在使用DataX时发生的一些问题\ntags:\n  - DataX\ncategories:\n  - - BigData\n  - - DataX\n---\n\n\n\n### 1.在第一次安装后测试自检时报错datax/plugin/reader/._xxxx/plugin.json]不存在\n\n**自检代码：**\n\n`python /opt/module/datax/bin/datax.py /opt/module/datax/job/job.json`\n\n**报错：**\n\n `[main] WARN  ConfigParser - 插件[streamreader,streamwriter]加载失败，1s后重试... Exception:Code:[Common-00], Describe:[您提供的配置文件存在错误信息，请检查您的作业配置 .] - 配置信息错误，您提供的配置文件[/home/hadoop/apps/datax/plugin/reader/._drdsreader/plugin.json]不存在. 请检查您的配置文件.` \n\n**解决方法：**\n\n删除datax/plugin目录下自带的临时文件\n\n**代码如下：**\n\nfind ./datax/plugin/* -type f -name \".*er\" | [xargs]\n\n### MySQL写数据到HDFS时，执行datax脚本报错\n\n![error](./img/1.png)\n\n然而在我折腾了一下午jdbc的配置后（在navicat上测试远程连接，idea上用jdbc远程连接成功）发现无事发生，还是同样的报错.....\n\n![navicat](../img/image-20240911233804427.png)\n\n![idea中JDBC测试](../img/image-20240911234004466.png)\n\n🤡\n\n怀疑虚拟机的JDBC驱动没装，在官网上下好包后在虚拟机装上发现还是同样的报错，最后发现datax的依赖库中jdbc版本太低，导致无法远程连接（官网下载最新的包替换问题解决）...😅\n\n![我请问呢？](../img/image-20240911234722046.png)\n\n","slug":"BigData/DataX/20240911","published":1,"date":"2024-09-11T14:25:03.527Z","updated":"2024-09-12T06:26:33.531Z","_id":"cm0ywpern00002sv24vurbeeh","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-在第一次安装后测试自检时报错datax-plugin-reader-xxxx-plugin-json-不存在\"><a href=\"#1-在第一次安装后测试自检时报错datax-plugin-reader-xxxx-plugin-json-不存在\" class=\"headerlink\" title=\"1.在第一次安装后测试自检时报错datax&#x2F;plugin&#x2F;reader&#x2F;._xxxx&#x2F;plugin.json]不存在\"></a>1.在第一次安装后测试自检时报错datax&#x2F;plugin&#x2F;reader&#x2F;._xxxx&#x2F;plugin.json]不存在</h3><p><strong>自检代码：</strong></p>\n<p><code>python /opt/module/datax/bin/datax.py /opt/module/datax/job/job.json</code></p>\n<p><strong>报错：</strong></p>\n<p> <code>[main] WARN  ConfigParser - 插件[streamreader,streamwriter]加载失败，1s后重试... Exception:Code:[Common-00], Describe:[您提供的配置文件存在错误信息，请检查您的作业配置 .] - 配置信息错误，您提供的配置文件[/home/hadoop/apps/datax/plugin/reader/._drdsreader/plugin.json]不存在. 请检查您的配置文件.</code> </p>\n<p><strong>解决方法：</strong></p>\n<p>删除datax&#x2F;plugin目录下自带的临时文件</p>\n<p><strong>代码如下：</strong></p>\n<p>find .&#x2F;datax&#x2F;plugin&#x2F;* -type f -name “.*er” | [xargs]</p>\n<h3 id=\"MySQL写数据到HDFS时，执行datax脚本报错\"><a href=\"#MySQL写数据到HDFS时，执行datax脚本报错\" class=\"headerlink\" title=\"MySQL写数据到HDFS时，执行datax脚本报错\"></a>MySQL写数据到HDFS时，执行datax脚本报错</h3><p><img src=\"/./img/1.png\" alt=\"error\"></p>\n<p>然而在我折腾了一下午jdbc的配置后（在navicat上测试远程连接，idea上用jdbc远程连接成功）发现无事发生，还是同样的报错…..</p>\n<p><img src=\"/../img/image-20240911233804427.png\" alt=\"navicat\"></p>\n<p><img src=\"/../img/image-20240911234004466.png\" alt=\"idea中JDBC测试\"></p>\n<p>🤡</p>\n<p>怀疑虚拟机的JDBC驱动没装，在官网上下好包后在虚拟机装上发现还是同样的报错，最后发现datax的依赖库中jdbc版本太低，导致无法远程连接（官网下载最新的包替换问题解决）…😅</p>\n<p><img src=\"/../img/image-20240911234722046.png\" alt=\"我请问呢？\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-在第一次安装后测试自检时报错datax-plugin-reader-xxxx-plugin-json-不存在\"><a href=\"#1-在第一次安装后测试自检时报错datax-plugin-reader-xxxx-plugin-json-不存在\" class=\"headerlink\" title=\"1.在第一次安装后测试自检时报错datax&#x2F;plugin&#x2F;reader&#x2F;._xxxx&#x2F;plugin.json]不存在\"></a>1.在第一次安装后测试自检时报错datax&#x2F;plugin&#x2F;reader&#x2F;._xxxx&#x2F;plugin.json]不存在</h3><p><strong>自检代码：</strong></p>\n<p><code>python /opt/module/datax/bin/datax.py /opt/module/datax/job/job.json</code></p>\n<p><strong>报错：</strong></p>\n<p> <code>[main] WARN  ConfigParser - 插件[streamreader,streamwriter]加载失败，1s后重试... Exception:Code:[Common-00], Describe:[您提供的配置文件存在错误信息，请检查您的作业配置 .] - 配置信息错误，您提供的配置文件[/home/hadoop/apps/datax/plugin/reader/._drdsreader/plugin.json]不存在. 请检查您的配置文件.</code> </p>\n<p><strong>解决方法：</strong></p>\n<p>删除datax&#x2F;plugin目录下自带的临时文件</p>\n<p><strong>代码如下：</strong></p>\n<p>find .&#x2F;datax&#x2F;plugin&#x2F;* -type f -name “.*er” | [xargs]</p>\n<h3 id=\"MySQL写数据到HDFS时，执行datax脚本报错\"><a href=\"#MySQL写数据到HDFS时，执行datax脚本报错\" class=\"headerlink\" title=\"MySQL写数据到HDFS时，执行datax脚本报错\"></a>MySQL写数据到HDFS时，执行datax脚本报错</h3><p><img src=\"/./img/1.png\" alt=\"error\"></p>\n<p>然而在我折腾了一下午jdbc的配置后（在navicat上测试远程连接，idea上用jdbc远程连接成功）发现无事发生，还是同样的报错…..</p>\n<p><img src=\"/../img/image-20240911233804427.png\" alt=\"navicat\"></p>\n<p><img src=\"/../img/image-20240911234004466.png\" alt=\"idea中JDBC测试\"></p>\n<p>🤡</p>\n<p>怀疑虚拟机的JDBC驱动没装，在官网上下好包后在虚拟机装上发现还是同样的报错，最后发现datax的依赖库中jdbc版本太低，导致无法远程连接（官网下载最新的包替换问题解决）…😅</p>\n<p><img src=\"/../img/image-20240911234722046.png\" alt=\"我请问呢？\"></p>\n"},{"title":"Hive on Spark 使用insert时报错Failed to create Spark client for Spark session XXX  return code  30041","_content":"\n情况如下：\n\n本来hive on spark是正常的状态，增删改查都没有问题，直到一天虚拟机因为笔记本非正常关机后重启完虚拟机仍在工作，\n\n![image-20241005192256436](../../../img/image-20241005192256436.png)\n\n然后在关闭集群时，node02，03正常关闭，node01死活关闭不了（关闭虚拟机后再次打开node01还是运行状态），直接任务管理器强退相关任务和服务后才关闭，最后导致metastore数据库异常，hive执行插入操作异常，报错：\n\n`[2024-10-05 18:28:26] [42000][30041] Error while processing statement: FAILED: Execution Error, return code 30041 from org.apache.hadoop.hive.ql.exec.spark.SparkTask. Failed to create Spark client for Spark session d8f9be8d-27ba-464b-af51-94b5e3275c47`\n\n解决方法:\n\n~~删除metastore重新创建并初始化元数据库:~~\n\n~~`mysql> drop database metastore;`~~\n\n~~`mysql> create database metastore;`~~\n\n~~`[root@node01 conf]$ schematool -initSchema -dbType mysql -verbose`~~\n\n~~然后重启hive和集群执行插入数据测试：~~\n\n~~![image-20241005193544038](../../../img/image-20241005193544038.png)~~\n\n~~成功~~\n\n十几分钟后再次使用又遇到同样的报错，\n\n![spark-standalone](../../../img/image-20241006090215878.png)\n\n然后发现spark用的是大学上课装的老版本，而我的/etc/profile配置文件里是这样的：\n\n![profile](../../../img/image-20241006123230093.png)\n\n（即使/etc/profile.d里配置的SPARK_HOME是正确的路径）\n\n删除老版本Spark再修改profile文件Spark_home位置后，Hive on Spark再次复活。\n\n![复活证明](../../../img/image-20241006172059609.png)\n","source":"_posts/BigData/Hive on Spark/新建 文本文档.md","raw":"---\ntitle: >-\n  Hive on Spark 使用insert时报错Failed to create Spark client for Spark session XXX \n  return code  30041\ntag:\n  - spark\ncategories:\n  - - BigData\n  - - Hive on Spark\n---\n\n情况如下：\n\n本来hive on spark是正常的状态，增删改查都没有问题，直到一天虚拟机因为笔记本非正常关机后重启完虚拟机仍在工作，\n\n![image-20241005192256436](../../../img/image-20241005192256436.png)\n\n然后在关闭集群时，node02，03正常关闭，node01死活关闭不了（关闭虚拟机后再次打开node01还是运行状态），直接任务管理器强退相关任务和服务后才关闭，最后导致metastore数据库异常，hive执行插入操作异常，报错：\n\n`[2024-10-05 18:28:26] [42000][30041] Error while processing statement: FAILED: Execution Error, return code 30041 from org.apache.hadoop.hive.ql.exec.spark.SparkTask. Failed to create Spark client for Spark session d8f9be8d-27ba-464b-af51-94b5e3275c47`\n\n解决方法:\n\n~~删除metastore重新创建并初始化元数据库:~~\n\n~~`mysql> drop database metastore;`~~\n\n~~`mysql> create database metastore;`~~\n\n~~`[root@node01 conf]$ schematool -initSchema -dbType mysql -verbose`~~\n\n~~然后重启hive和集群执行插入数据测试：~~\n\n~~![image-20241005193544038](../../../img/image-20241005193544038.png)~~\n\n~~成功~~\n\n十几分钟后再次使用又遇到同样的报错，\n\n![spark-standalone](../../../img/image-20241006090215878.png)\n\n然后发现spark用的是大学上课装的老版本，而我的/etc/profile配置文件里是这样的：\n\n![profile](../../../img/image-20241006123230093.png)\n\n（即使/etc/profile.d里配置的SPARK_HOME是正确的路径）\n\n删除老版本Spark再修改profile文件Spark_home位置后，Hive on Spark再次复活。\n\n![复活证明](../../../img/image-20241006172059609.png)\n","slug":"BigData/Hive on Spark/新建 文本文档","published":1,"date":"2024-10-02T12:12:45.704Z","updated":"2024-10-06T09:21:10.909Z","_id":"cm1w2y0d90000jkv2fb7g1jew","comments":1,"layout":"post","photos":[],"link":"","content":"<p>情况如下：</p>\n<p>本来hive on spark是正常的状态，增删改查都没有问题，直到一天虚拟机因为笔记本非正常关机后重启完虚拟机仍在工作，</p>\n<p><img src=\"/../../../img/image-20241005192256436.png\" alt=\"image-20241005192256436\"></p>\n<p>然后在关闭集群时，node02，03正常关闭，node01死活关闭不了（关闭虚拟机后再次打开node01还是运行状态），直接任务管理器强退相关任务和服务后才关闭，最后导致metastore数据库异常，hive执行插入操作异常，报错：</p>\n<p><code>[2024-10-05 18:28:26] [42000][30041] Error while processing statement: FAILED: Execution Error, return code 30041 from org.apache.hadoop.hive.ql.exec.spark.SparkTask. Failed to create Spark client for Spark session d8f9be8d-27ba-464b-af51-94b5e3275c47</code></p>\n<p>解决方法:</p>\n<p><del>删除metastore重新创建并初始化元数据库:</del></p>\n<p><del><code>mysql&gt; drop database metastore;</code></del></p>\n<p><del><code>mysql&gt; create database metastore;</code></del></p>\n<p><del><code>[root@node01 conf]$ schematool -initSchema -dbType mysql -verbose</code></del></p>\n<p><del>然后重启hive和集群执行插入数据测试：</del></p>\n<p><del><img src=\"/../../../img/image-20241005193544038.png\" alt=\"image-20241005193544038\"></del></p>\n<p><del>成功</del></p>\n<p>十几分钟后再次使用又遇到同样的报错，</p>\n<p><img src=\"/../../../img/image-20241006090215878.png\" alt=\"spark-standalone\"></p>\n<p>然后发现spark用的是大学上课装的老版本，而我的&#x2F;etc&#x2F;profile配置文件里是这样的：</p>\n<p><img src=\"/../../../img/image-20241006123230093.png\" alt=\"profile\"></p>\n<p>（即使&#x2F;etc&#x2F;profile.d里配置的SPARK_HOME是正确的路径）</p>\n<p>删除老版本Spark再修改profile文件Spark_home位置后，Hive on Spark再次复活。</p>\n<p><img src=\"/../../../img/image-20241006172059609.png\" alt=\"复活证明\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>情况如下：</p>\n<p>本来hive on spark是正常的状态，增删改查都没有问题，直到一天虚拟机因为笔记本非正常关机后重启完虚拟机仍在工作，</p>\n<p><img src=\"/../../../img/image-20241005192256436.png\" alt=\"image-20241005192256436\"></p>\n<p>然后在关闭集群时，node02，03正常关闭，node01死活关闭不了（关闭虚拟机后再次打开node01还是运行状态），直接任务管理器强退相关任务和服务后才关闭，最后导致metastore数据库异常，hive执行插入操作异常，报错：</p>\n<p><code>[2024-10-05 18:28:26] [42000][30041] Error while processing statement: FAILED: Execution Error, return code 30041 from org.apache.hadoop.hive.ql.exec.spark.SparkTask. Failed to create Spark client for Spark session d8f9be8d-27ba-464b-af51-94b5e3275c47</code></p>\n<p>解决方法:</p>\n<p><del>删除metastore重新创建并初始化元数据库:</del></p>\n<p><del><code>mysql&gt; drop database metastore;</code></del></p>\n<p><del><code>mysql&gt; create database metastore;</code></del></p>\n<p><del><code>[root@node01 conf]$ schematool -initSchema -dbType mysql -verbose</code></del></p>\n<p><del>然后重启hive和集群执行插入数据测试：</del></p>\n<p><del><img src=\"/../../../img/image-20241005193544038.png\" alt=\"image-20241005193544038\"></del></p>\n<p><del>成功</del></p>\n<p>十几分钟后再次使用又遇到同样的报错，</p>\n<p><img src=\"/../../../img/image-20241006090215878.png\" alt=\"spark-standalone\"></p>\n<p>然后发现spark用的是大学上课装的老版本，而我的&#x2F;etc&#x2F;profile配置文件里是这样的：</p>\n<p><img src=\"/../../../img/image-20241006123230093.png\" alt=\"profile\"></p>\n<p>（即使&#x2F;etc&#x2F;profile.d里配置的SPARK_HOME是正确的路径）</p>\n<p>删除老版本Spark再修改profile文件Spark_home位置后，Hive on Spark再次复活。</p>\n<p><img src=\"/../../../img/image-20241006172059609.png\" alt=\"复活证明\"></p>\n"},{"title":"数据仓库-分层结构","_content":"\n### 一、ODS层-数据源\n\nODS（Operate Data Store）：对接日志服务器和业务数据库\n\n尽可能不变：\n\n​\t\t1.存储方式不要变\n\n​\t\t2.数据格式不要变\n\n​\t\t3.压缩格式不要变\n\n有些可以变：\n\n​\t\t1.融合异构数据\n\n​\t\t2.汇总不同时间的数据\n\n### 二、DWD层－加工数据\n\nDWD（Data Warehouse Detail）：对ODS层的数据进行加工处理，为了后面的统计分析做准备\n\n\n\n","source":"_posts/BigData/数据仓库-分层结构.md","raw":"---\ntitle: 数据仓库-分层结构\ntag:\n  - 数据仓库\ncategories:\n  - - BigData\n---\n\n### 一、ODS层-数据源\n\nODS（Operate Data Store）：对接日志服务器和业务数据库\n\n尽可能不变：\n\n​\t\t1.存储方式不要变\n\n​\t\t2.数据格式不要变\n\n​\t\t3.压缩格式不要变\n\n有些可以变：\n\n​\t\t1.融合异构数据\n\n​\t\t2.汇总不同时间的数据\n\n### 二、DWD层－加工数据\n\nDWD（Data Warehouse Detail）：对ODS层的数据进行加工处理，为了后面的统计分析做准备\n\n\n\n","slug":"BigData/数据仓库-分层结构","published":1,"date":"2024-09-15T16:08:51.650Z","updated":"2024-10-05T11:37:36.160Z","_id":"cm1w2y0dn0003jkv26r6u7o5i","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"一、ODS层-数据源\"><a href=\"#一、ODS层-数据源\" class=\"headerlink\" title=\"一、ODS层-数据源\"></a>一、ODS层-数据源</h3><p>ODS（Operate Data Store）：对接日志服务器和业务数据库</p>\n<p>尽可能不变：</p>\n<p>​\t\t1.存储方式不要变</p>\n<p>​\t\t2.数据格式不要变</p>\n<p>​\t\t3.压缩格式不要变</p>\n<p>有些可以变：</p>\n<p>​\t\t1.融合异构数据</p>\n<p>​\t\t2.汇总不同时间的数据</p>\n<h3 id=\"二、DWD层－加工数据\"><a href=\"#二、DWD层－加工数据\" class=\"headerlink\" title=\"二、DWD层－加工数据\"></a>二、DWD层－加工数据</h3><p>DWD（Data Warehouse Detail）：对ODS层的数据进行加工处理，为了后面的统计分析做准备</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、ODS层-数据源\"><a href=\"#一、ODS层-数据源\" class=\"headerlink\" title=\"一、ODS层-数据源\"></a>一、ODS层-数据源</h3><p>ODS（Operate Data Store）：对接日志服务器和业务数据库</p>\n<p>尽可能不变：</p>\n<p>​\t\t1.存储方式不要变</p>\n<p>​\t\t2.数据格式不要变</p>\n<p>​\t\t3.压缩格式不要变</p>\n<p>有些可以变：</p>\n<p>​\t\t1.融合异构数据</p>\n<p>​\t\t2.汇总不同时间的数据</p>\n<h3 id=\"二、DWD层－加工数据\"><a href=\"#二、DWD层－加工数据\" class=\"headerlink\" title=\"二、DWD层－加工数据\"></a>二、DWD层－加工数据</h3><p>DWD（Data Warehouse Detail）：对ODS层的数据进行加工处理，为了后面的统计分析做准备</p>\n"},{"title":"下载Apple Music歌曲|解密ALAC","_content":"\n需要用到的工具：\n\n -安装 Go https://go.dev/dl/go1.22.1.windows-arm64.msi\n\n -安装 Python https://www.python.org/ftp/python/3.12.3-amd64.exe \n\n-安装 frida\n\n​\t `在cmd中输入“pip install frida-tools” `\n\n-下载 adb https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads\n\n 解压下载后的压缩包 \n\n-安装 MP4Box https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe \n\n-安装 Android Studio https://developer.android.com/studio?hl=zh-cn 全部选择下一步即可 \n\n-下载 SAI 应用安装器 安装包 https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk \n\n-下载 Apple Music 安装包 https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/ \n\n-下载 frida 服务端 https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz \n\n解压下载后的压缩包\n\n -下载 alac 解密文件 https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip \n\n解压下载后的压缩包 所有下载的东西必须全英文路径且不包含空格！！！\n\n> 转载BiliBili@[简纸Paper](https://space.bilibili.com/355150816)\n>\n> ","source":"_posts/hack/新建 文本.md","raw":"---\ntitle: 下载Apple Music歌曲|解密ALAC\ntags: ['hack', 'apple music']\ncategories:\n  - - hack\n---\n\n需要用到的工具：\n\n -安装 Go https://go.dev/dl/go1.22.1.windows-arm64.msi\n\n -安装 Python https://www.python.org/ftp/python/3.12.3-amd64.exe \n\n-安装 frida\n\n​\t `在cmd中输入“pip install frida-tools” `\n\n-下载 adb https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads\n\n 解压下载后的压缩包 \n\n-安装 MP4Box https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe \n\n-安装 Android Studio https://developer.android.com/studio?hl=zh-cn 全部选择下一步即可 \n\n-下载 SAI 应用安装器 安装包 https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk \n\n-下载 Apple Music 安装包 https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/ \n\n-下载 frida 服务端 https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz \n\n解压下载后的压缩包\n\n -下载 alac 解密文件 https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip \n\n解压下载后的压缩包 所有下载的东西必须全英文路径且不包含空格！！！\n\n> 转载BiliBili@[简纸Paper](https://space.bilibili.com/355150816)\n>\n> ","slug":"hack/新建 文本","published":1,"date":"2024-10-06T11:16:42.784Z","updated":"2024-10-06T12:13:38.864Z","_id":"cm1xjgae50000oov25klw9mzh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>需要用到的工具：</p>\n<p> -安装 Go <a href=\"https://go.dev/dl/go1.22.1.windows-arm64.msi\">https://go.dev/dl/go1.22.1.windows-arm64.msi</a></p>\n<p> -安装 Python <a href=\"https://www.python.org/ftp/python/3.12.3-amd64.exe\">https://www.python.org/ftp/python/3.12.3-amd64.exe</a> </p>\n<p>-安装 frida</p>\n<p>​\t <code>在cmd中输入“pip install frida-tools” </code></p>\n<p>-下载 adb <a href=\"https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads\">https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads</a></p>\n<p> 解压下载后的压缩包 </p>\n<p>-安装 MP4Box <a href=\"https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe\">https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe</a> </p>\n<p>-安装 Android Studio <a href=\"https://developer.android.com/studio?hl=zh-cn\">https://developer.android.com/studio?hl=zh-cn</a> 全部选择下一步即可 </p>\n<p>-下载 SAI 应用安装器 安装包 <a href=\"https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk\">https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk</a> </p>\n<p>-下载 Apple Music 安装包 <a href=\"https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/\">https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/</a> </p>\n<p>-下载 frida 服务端 <a href=\"https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz\">https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz</a> </p>\n<p>解压下载后的压缩包</p>\n<p> -下载 alac 解密文件 <a href=\"https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip\">https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip</a> </p>\n<p>解压下载后的压缩包 所有下载的东西必须全英文路径且不包含空格！！！</p>\n<blockquote>\n<p>转载BiliBili@<a href=\"https://space.bilibili.com/355150816\">简纸Paper</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>需要用到的工具：</p>\n<p> -安装 Go <a href=\"https://go.dev/dl/go1.22.1.windows-arm64.msi\">https://go.dev/dl/go1.22.1.windows-arm64.msi</a></p>\n<p> -安装 Python <a href=\"https://www.python.org/ftp/python/3.12.3-amd64.exe\">https://www.python.org/ftp/python/3.12.3-amd64.exe</a> </p>\n<p>-安装 frida</p>\n<p>​\t <code>在cmd中输入“pip install frida-tools” </code></p>\n<p>-下载 adb <a href=\"https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads\">https://developer.android.com/tools/releases/platfrom-tools?hl=zh-cn#downloads</a></p>\n<p> 解压下载后的压缩包 </p>\n<p>-安装 MP4Box <a href=\"https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe\">https://download/tsi.telecim-paristech.fr/gpac/new_builds/gpac_latest_head_win64.exe</a> </p>\n<p>-安装 Android Studio <a href=\"https://developer.android.com/studio?hl=zh-cn\">https://developer.android.com/studio?hl=zh-cn</a> 全部选择下一步即可 </p>\n<p>-下载 SAI 应用安装器 安装包 <a href=\"https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk\">https://f-droid.org/repo/com.aefyr.sai.fdroid_60.apk</a> </p>\n<p>-下载 Apple Music 安装包 <a href=\"https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/\">https://www.apkmirror.com/apk/apple/apple-music/apple-music-3-6-0-beta-release/apple-music-3-6-0-beta-4-android-apk-download/</a> </p>\n<p>-下载 frida 服务端 <a href=\"https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz\">https://github.com/frida/frida/releases/download/16.2.1/frida-server-16.2.1-android-x86_64.xz</a> </p>\n<p>解压下载后的压缩包</p>\n<p> -下载 alac 解密文件 <a href=\"https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip\">https://github.com/zhaarey/apple-music-alac-atmos-downloader/archive/refs/heads/main.zip</a> </p>\n<p>解压下载后的压缩包 所有下载的东西必须全英文路径且不包含空格！！！</p>\n<blockquote>\n<p>转载BiliBili@<a href=\"https://space.bilibili.com/355150816\">简纸Paper</a></p>\n</blockquote>\n"},{"title":"电商数仓-优惠券维度表","_content":"\n站在优惠券的角度分析指标\n\n统计行为\n\n分析状态\n\n分析表：coupon_info\n\n```sql\nDROP TABLE IF EXISTS dim_coupon_full;\nCREATE EXTERNAL TABLE dim_coupon_full\n(\n    `id`                  STRING COMMENT '优惠券编号',\n    `coupon_name`       STRING COMMENT '优惠券名称',\n    `coupon_type_code` STRING COMMENT '优惠券类型编码',\n    `coupon_type_name` STRING COMMENT '优惠券类型名称',\n    `condition_amount` DECIMAL(16, 2) COMMENT '满额数',\n    `condition_num`     BIGINT COMMENT '满件数',\n    `activity_id`       STRING COMMENT '活动编号',\n    `benefit_amount`   DECIMAL(16, 2) COMMENT '减免金额',\n    `benefit_discount` DECIMAL(16, 2) COMMENT '折扣',\n    `benefit_rule`     STRING COMMENT '优惠规则:满元*减*元，满*件打*折',\n    `create_time`       STRING COMMENT '创建时间',\n    `range_type_code`  STRING COMMENT '优惠范围类型编码',\n    `range_type_name`  STRING COMMENT '优惠范围类型名称',\n    `limit_num`         BIGINT COMMENT '最多领取次数',\n    `taken_count`       BIGINT COMMENT '已领取次数',\n    `start_time`        STRING COMMENT '可以领取的开始时间',\n    `end_time`          STRING COMMENT '可以领取的结束时间',\n    `operate_time`      STRING COMMENT '修改时间',\n    `expire_time`       STRING COMMENT '过期时间'\n) COMMENT '优惠券维度表'\n    PARTITIONED BY (`dt` STRING)\n    STORED AS ORC\n    LOCATION '/warehouse/gmall/dim/dim_coupon_full/'\n    TBLPROPERTIES ('orc.compress' = 'snappy');\n```\n\n数据装载：\n\n​\t\t\t\t-load：\n\n​\t\t\t\t\t\t\t-coupon_info(主维表)\n\n​\t\t\t\t\t\t\t-base_dic（字典表）\n\n​\t\t\t\t-save:\n\n​\t   ![](../../img/image-20241014020343184.png)\n\n```sql\ninsert overwrite table dim_coupon_full partition(dt='2022-06-08')\nselect\n    id,\n    coupon_name,\n    coupon_type,\n    coupon_dic.dic_name,\n    condition_amount,\n    condition_num,\n    activity_id,\n    benefit_amount,\n    benefit_discount,\n    case coupon_type\n        when '3201' then concat('满',condition_amount,'元减',benefit_amount,'元')\n        when '3202' then concat('满',condition_num,'件打', benefit_discount,' 折')\n        when '3203' then concat('减',benefit_amount,'元')\n    end benefit_rule,\n    create_time,\n    range_type,\n    range_dic.dic_name,\n    limit_num,\n    taken_count,\n    start_time,\n    end_time,\n    operate_time,\n    expire_time\nfrom\n(\n    select\n        id,\n        coupon_name,\n        coupon_type,\n        condition_amount,\n        condition_num,\n        activity_id,\n        benefit_amount,\n        benefit_discount,\n        create_time,\n        range_type,\n        limit_num,\n        taken_count,\n        start_time,\n        end_time,\n        operate_time,\n        expire_time\n    from ods_coupon_info_full\n    where dt='2022-06-08'\n)ci\nleft join\n(\n    select\n        dic_code,\n        dic_name\n    from ods_base_dic_full\n    where dt='2022-06-08'\n    and parent_code='32'\n)coupon_dic\non ci.coupon_type=coupon_dic.dic_code\nleft join\n(\n    select\n        dic_code,\n        dic_name\n    from ods_base_dic_full\n    where dt='2022-06-08'\n    and parent_code='33'\n)range_dic\non ci.range_type=range_dic.dic_code;\n```","source":"_posts/电商数仓6.0/优惠券维度表.md","raw":"---\ntitle: 电商数仓-优惠券维度表\ntags:\n  - BigData\n  - 电商数仓6.0\ncategories:\n  - - 电商数仓6.0\n---\n\n站在优惠券的角度分析指标\n\n统计行为\n\n分析状态\n\n分析表：coupon_info\n\n```sql\nDROP TABLE IF EXISTS dim_coupon_full;\nCREATE EXTERNAL TABLE dim_coupon_full\n(\n    `id`                  STRING COMMENT '优惠券编号',\n    `coupon_name`       STRING COMMENT '优惠券名称',\n    `coupon_type_code` STRING COMMENT '优惠券类型编码',\n    `coupon_type_name` STRING COMMENT '优惠券类型名称',\n    `condition_amount` DECIMAL(16, 2) COMMENT '满额数',\n    `condition_num`     BIGINT COMMENT '满件数',\n    `activity_id`       STRING COMMENT '活动编号',\n    `benefit_amount`   DECIMAL(16, 2) COMMENT '减免金额',\n    `benefit_discount` DECIMAL(16, 2) COMMENT '折扣',\n    `benefit_rule`     STRING COMMENT '优惠规则:满元*减*元，满*件打*折',\n    `create_time`       STRING COMMENT '创建时间',\n    `range_type_code`  STRING COMMENT '优惠范围类型编码',\n    `range_type_name`  STRING COMMENT '优惠范围类型名称',\n    `limit_num`         BIGINT COMMENT '最多领取次数',\n    `taken_count`       BIGINT COMMENT '已领取次数',\n    `start_time`        STRING COMMENT '可以领取的开始时间',\n    `end_time`          STRING COMMENT '可以领取的结束时间',\n    `operate_time`      STRING COMMENT '修改时间',\n    `expire_time`       STRING COMMENT '过期时间'\n) COMMENT '优惠券维度表'\n    PARTITIONED BY (`dt` STRING)\n    STORED AS ORC\n    LOCATION '/warehouse/gmall/dim/dim_coupon_full/'\n    TBLPROPERTIES ('orc.compress' = 'snappy');\n```\n\n数据装载：\n\n​\t\t\t\t-load：\n\n​\t\t\t\t\t\t\t-coupon_info(主维表)\n\n​\t\t\t\t\t\t\t-base_dic（字典表）\n\n​\t\t\t\t-save:\n\n​\t   ![](../../img/image-20241014020343184.png)\n\n```sql\ninsert overwrite table dim_coupon_full partition(dt='2022-06-08')\nselect\n    id,\n    coupon_name,\n    coupon_type,\n    coupon_dic.dic_name,\n    condition_amount,\n    condition_num,\n    activity_id,\n    benefit_amount,\n    benefit_discount,\n    case coupon_type\n        when '3201' then concat('满',condition_amount,'元减',benefit_amount,'元')\n        when '3202' then concat('满',condition_num,'件打', benefit_discount,' 折')\n        when '3203' then concat('减',benefit_amount,'元')\n    end benefit_rule,\n    create_time,\n    range_type,\n    range_dic.dic_name,\n    limit_num,\n    taken_count,\n    start_time,\n    end_time,\n    operate_time,\n    expire_time\nfrom\n(\n    select\n        id,\n        coupon_name,\n        coupon_type,\n        condition_amount,\n        condition_num,\n        activity_id,\n        benefit_amount,\n        benefit_discount,\n        create_time,\n        range_type,\n        limit_num,\n        taken_count,\n        start_time,\n        end_time,\n        operate_time,\n        expire_time\n    from ods_coupon_info_full\n    where dt='2022-06-08'\n)ci\nleft join\n(\n    select\n        dic_code,\n        dic_name\n    from ods_base_dic_full\n    where dt='2022-06-08'\n    and parent_code='32'\n)coupon_dic\non ci.coupon_type=coupon_dic.dic_code\nleft join\n(\n    select\n        dic_code,\n        dic_name\n    from ods_base_dic_full\n    where dt='2022-06-08'\n    and parent_code='33'\n)range_dic\non ci.range_type=range_dic.dic_code;\n```","slug":"电商数仓6.0/优惠券维度表","published":1,"date":"2024-10-13T17:07:35.388Z","updated":"2024-10-13T18:07:34.832Z","_id":"cm27wec880000c0v22ks82q7z","comments":1,"layout":"post","photos":[],"link":"","content":"<p>站在优惠券的角度分析指标</p>\n<p>统计行为</p>\n<p>分析状态</p>\n<p>分析表：coupon_info</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> dim_coupon_full;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">EXTERNAL</span> <span class=\"keyword\">TABLE</span> dim_coupon_full</span><br><span class=\"line\">(</span><br><span class=\"line\">    `id`                  STRING COMMENT <span class=\"string\">&#x27;优惠券编号&#x27;</span>,</span><br><span class=\"line\">    `coupon_name`       STRING COMMENT <span class=\"string\">&#x27;优惠券名称&#x27;</span>,</span><br><span class=\"line\">    `coupon_type_code` STRING COMMENT <span class=\"string\">&#x27;优惠券类型编码&#x27;</span>,</span><br><span class=\"line\">    `coupon_type_name` STRING COMMENT <span class=\"string\">&#x27;优惠券类型名称&#x27;</span>,</span><br><span class=\"line\">    `condition_amount` <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;满额数&#x27;</span>,</span><br><span class=\"line\">    `condition_num`     <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;满件数&#x27;</span>,</span><br><span class=\"line\">    `activity_id`       STRING COMMENT <span class=\"string\">&#x27;活动编号&#x27;</span>,</span><br><span class=\"line\">    `benefit_amount`   <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;减免金额&#x27;</span>,</span><br><span class=\"line\">    `benefit_discount` <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;折扣&#x27;</span>,</span><br><span class=\"line\">    `benefit_rule`     STRING COMMENT <span class=\"string\">&#x27;优惠规则:满元*减*元，满*件打*折&#x27;</span>,</span><br><span class=\"line\">    `create_time`       STRING COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">    `range_type_code`  STRING COMMENT <span class=\"string\">&#x27;优惠范围类型编码&#x27;</span>,</span><br><span class=\"line\">    `range_type_name`  STRING COMMENT <span class=\"string\">&#x27;优惠范围类型名称&#x27;</span>,</span><br><span class=\"line\">    `limit_num`         <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;最多领取次数&#x27;</span>,</span><br><span class=\"line\">    `taken_count`       <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;已领取次数&#x27;</span>,</span><br><span class=\"line\">    `start_time`        STRING COMMENT <span class=\"string\">&#x27;可以领取的开始时间&#x27;</span>,</span><br><span class=\"line\">    `end_time`          STRING COMMENT <span class=\"string\">&#x27;可以领取的结束时间&#x27;</span>,</span><br><span class=\"line\">    `operate_time`      STRING COMMENT <span class=\"string\">&#x27;修改时间&#x27;</span>,</span><br><span class=\"line\">    `expire_time`       STRING COMMENT <span class=\"string\">&#x27;过期时间&#x27;</span></span><br><span class=\"line\">) COMMENT <span class=\"string\">&#x27;优惠券维度表&#x27;</span></span><br><span class=\"line\">    PARTITIONED <span class=\"keyword\">BY</span> (`dt` STRING)</span><br><span class=\"line\">    STORED <span class=\"keyword\">AS</span> ORC</span><br><span class=\"line\">    LOCATION <span class=\"string\">&#x27;/warehouse/gmall/dim/dim_coupon_full/&#x27;</span></span><br><span class=\"line\">    TBLPROPERTIES (<span class=\"string\">&#x27;orc.compress&#x27;</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;snappy&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>数据装载：</p>\n<p>​\t\t\t\t-load：</p>\n<p>​\t\t\t\t\t\t\t-coupon_info(主维表)</p>\n<p>​\t\t\t\t\t\t\t-base_dic（字典表）</p>\n<p>​\t\t\t\t-save:</p>\n<p>​\t   <img src=\"/../../img/image-20241014020343184.png\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> overwrite <span class=\"keyword\">table</span> dim_coupon_full <span class=\"keyword\">partition</span>(dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">    id,</span><br><span class=\"line\">    coupon_name,</span><br><span class=\"line\">    coupon_type,</span><br><span class=\"line\">    coupon_dic.dic_name,</span><br><span class=\"line\">    condition_amount,</span><br><span class=\"line\">    condition_num,</span><br><span class=\"line\">    activity_id,</span><br><span class=\"line\">    benefit_amount,</span><br><span class=\"line\">    benefit_discount,</span><br><span class=\"line\">    <span class=\"keyword\">case</span> coupon_type</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3201&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;满&#x27;</span>,condition_amount,<span class=\"string\">&#x27;元减&#x27;</span>,benefit_amount,<span class=\"string\">&#x27;元&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3202&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;满&#x27;</span>,condition_num,<span class=\"string\">&#x27;件打&#x27;</span>, benefit_discount,<span class=\"string\">&#x27; 折&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3203&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;减&#x27;</span>,benefit_amount,<span class=\"string\">&#x27;元&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span> benefit_rule,</span><br><span class=\"line\">    create_time,</span><br><span class=\"line\">    range_type,</span><br><span class=\"line\">    range_dic.dic_name,</span><br><span class=\"line\">    limit_num,</span><br><span class=\"line\">    taken_count,</span><br><span class=\"line\">    start_time,</span><br><span class=\"line\">    end_time,</span><br><span class=\"line\">    operate_time,</span><br><span class=\"line\">    expire_time</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        id,</span><br><span class=\"line\">        coupon_name,</span><br><span class=\"line\">        coupon_type,</span><br><span class=\"line\">        condition_amount,</span><br><span class=\"line\">        condition_num,</span><br><span class=\"line\">        activity_id,</span><br><span class=\"line\">        benefit_amount,</span><br><span class=\"line\">        benefit_discount,</span><br><span class=\"line\">        create_time,</span><br><span class=\"line\">        range_type,</span><br><span class=\"line\">        limit_num,</span><br><span class=\"line\">        taken_count,</span><br><span class=\"line\">        start_time,</span><br><span class=\"line\">        end_time,</span><br><span class=\"line\">        operate_time,</span><br><span class=\"line\">        expire_time</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_coupon_info_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">)ci</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        dic_code,</span><br><span class=\"line\">        dic_name</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_base_dic_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> parent_code<span class=\"operator\">=</span><span class=\"string\">&#x27;32&#x27;</span></span><br><span class=\"line\">)coupon_dic</span><br><span class=\"line\"><span class=\"keyword\">on</span> ci.coupon_type<span class=\"operator\">=</span>coupon_dic.dic_code</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        dic_code,</span><br><span class=\"line\">        dic_name</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_base_dic_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> parent_code<span class=\"operator\">=</span><span class=\"string\">&#x27;33&#x27;</span></span><br><span class=\"line\">)range_dic</span><br><span class=\"line\"><span class=\"keyword\">on</span> ci.range_type<span class=\"operator\">=</span>range_dic.dic_code;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>站在优惠券的角度分析指标</p>\n<p>统计行为</p>\n<p>分析状态</p>\n<p>分析表：coupon_info</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> dim_coupon_full;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">EXTERNAL</span> <span class=\"keyword\">TABLE</span> dim_coupon_full</span><br><span class=\"line\">(</span><br><span class=\"line\">    `id`                  STRING COMMENT <span class=\"string\">&#x27;优惠券编号&#x27;</span>,</span><br><span class=\"line\">    `coupon_name`       STRING COMMENT <span class=\"string\">&#x27;优惠券名称&#x27;</span>,</span><br><span class=\"line\">    `coupon_type_code` STRING COMMENT <span class=\"string\">&#x27;优惠券类型编码&#x27;</span>,</span><br><span class=\"line\">    `coupon_type_name` STRING COMMENT <span class=\"string\">&#x27;优惠券类型名称&#x27;</span>,</span><br><span class=\"line\">    `condition_amount` <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;满额数&#x27;</span>,</span><br><span class=\"line\">    `condition_num`     <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;满件数&#x27;</span>,</span><br><span class=\"line\">    `activity_id`       STRING COMMENT <span class=\"string\">&#x27;活动编号&#x27;</span>,</span><br><span class=\"line\">    `benefit_amount`   <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;减免金额&#x27;</span>,</span><br><span class=\"line\">    `benefit_discount` <span class=\"type\">DECIMAL</span>(<span class=\"number\">16</span>, <span class=\"number\">2</span>) COMMENT <span class=\"string\">&#x27;折扣&#x27;</span>,</span><br><span class=\"line\">    `benefit_rule`     STRING COMMENT <span class=\"string\">&#x27;优惠规则:满元*减*元，满*件打*折&#x27;</span>,</span><br><span class=\"line\">    `create_time`       STRING COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">    `range_type_code`  STRING COMMENT <span class=\"string\">&#x27;优惠范围类型编码&#x27;</span>,</span><br><span class=\"line\">    `range_type_name`  STRING COMMENT <span class=\"string\">&#x27;优惠范围类型名称&#x27;</span>,</span><br><span class=\"line\">    `limit_num`         <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;最多领取次数&#x27;</span>,</span><br><span class=\"line\">    `taken_count`       <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;已领取次数&#x27;</span>,</span><br><span class=\"line\">    `start_time`        STRING COMMENT <span class=\"string\">&#x27;可以领取的开始时间&#x27;</span>,</span><br><span class=\"line\">    `end_time`          STRING COMMENT <span class=\"string\">&#x27;可以领取的结束时间&#x27;</span>,</span><br><span class=\"line\">    `operate_time`      STRING COMMENT <span class=\"string\">&#x27;修改时间&#x27;</span>,</span><br><span class=\"line\">    `expire_time`       STRING COMMENT <span class=\"string\">&#x27;过期时间&#x27;</span></span><br><span class=\"line\">) COMMENT <span class=\"string\">&#x27;优惠券维度表&#x27;</span></span><br><span class=\"line\">    PARTITIONED <span class=\"keyword\">BY</span> (`dt` STRING)</span><br><span class=\"line\">    STORED <span class=\"keyword\">AS</span> ORC</span><br><span class=\"line\">    LOCATION <span class=\"string\">&#x27;/warehouse/gmall/dim/dim_coupon_full/&#x27;</span></span><br><span class=\"line\">    TBLPROPERTIES (<span class=\"string\">&#x27;orc.compress&#x27;</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;snappy&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>数据装载：</p>\n<p>​\t\t\t\t-load：</p>\n<p>​\t\t\t\t\t\t\t-coupon_info(主维表)</p>\n<p>​\t\t\t\t\t\t\t-base_dic（字典表）</p>\n<p>​\t\t\t\t-save:</p>\n<p>​\t   <img src=\"/../../img/image-20241014020343184.png\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> overwrite <span class=\"keyword\">table</span> dim_coupon_full <span class=\"keyword\">partition</span>(dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">    id,</span><br><span class=\"line\">    coupon_name,</span><br><span class=\"line\">    coupon_type,</span><br><span class=\"line\">    coupon_dic.dic_name,</span><br><span class=\"line\">    condition_amount,</span><br><span class=\"line\">    condition_num,</span><br><span class=\"line\">    activity_id,</span><br><span class=\"line\">    benefit_amount,</span><br><span class=\"line\">    benefit_discount,</span><br><span class=\"line\">    <span class=\"keyword\">case</span> coupon_type</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3201&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;满&#x27;</span>,condition_amount,<span class=\"string\">&#x27;元减&#x27;</span>,benefit_amount,<span class=\"string\">&#x27;元&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3202&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;满&#x27;</span>,condition_num,<span class=\"string\">&#x27;件打&#x27;</span>, benefit_discount,<span class=\"string\">&#x27; 折&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">when</span> <span class=\"string\">&#x27;3203&#x27;</span> <span class=\"keyword\">then</span> concat(<span class=\"string\">&#x27;减&#x27;</span>,benefit_amount,<span class=\"string\">&#x27;元&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span> benefit_rule,</span><br><span class=\"line\">    create_time,</span><br><span class=\"line\">    range_type,</span><br><span class=\"line\">    range_dic.dic_name,</span><br><span class=\"line\">    limit_num,</span><br><span class=\"line\">    taken_count,</span><br><span class=\"line\">    start_time,</span><br><span class=\"line\">    end_time,</span><br><span class=\"line\">    operate_time,</span><br><span class=\"line\">    expire_time</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        id,</span><br><span class=\"line\">        coupon_name,</span><br><span class=\"line\">        coupon_type,</span><br><span class=\"line\">        condition_amount,</span><br><span class=\"line\">        condition_num,</span><br><span class=\"line\">        activity_id,</span><br><span class=\"line\">        benefit_amount,</span><br><span class=\"line\">        benefit_discount,</span><br><span class=\"line\">        create_time,</span><br><span class=\"line\">        range_type,</span><br><span class=\"line\">        limit_num,</span><br><span class=\"line\">        taken_count,</span><br><span class=\"line\">        start_time,</span><br><span class=\"line\">        end_time,</span><br><span class=\"line\">        operate_time,</span><br><span class=\"line\">        expire_time</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_coupon_info_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">)ci</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        dic_code,</span><br><span class=\"line\">        dic_name</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_base_dic_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> parent_code<span class=\"operator\">=</span><span class=\"string\">&#x27;32&#x27;</span></span><br><span class=\"line\">)coupon_dic</span><br><span class=\"line\"><span class=\"keyword\">on</span> ci.coupon_type<span class=\"operator\">=</span>coupon_dic.dic_code</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span></span><br><span class=\"line\">        dic_code,</span><br><span class=\"line\">        dic_name</span><br><span class=\"line\">    <span class=\"keyword\">from</span> ods_base_dic_full</span><br><span class=\"line\">    <span class=\"keyword\">where</span> dt<span class=\"operator\">=</span><span class=\"string\">&#x27;2022-06-08&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> parent_code<span class=\"operator\">=</span><span class=\"string\">&#x27;33&#x27;</span></span><br><span class=\"line\">)range_dic</span><br><span class=\"line\"><span class=\"keyword\">on</span> ci.range_type<span class=\"operator\">=</span>range_dic.dic_code;</span><br></pre></td></tr></table></figure>"},{"title":"HDFS高可用之HA架构","_content":"\n### 一、NameNode故障导致的问题\n\n1.NameNode机器宕机，导致整个集群不可用，重启NameNode后才可使用，\n\n2.NameNode机器软硬件升级，导致集群不可用\n\n以上两种情况会导致HDFS系统无法使用，为解决以上的问题Hadoop2.0推出了HDFS的高可用（HA）解决方案。\n\n\n\n### 二、HA高可用\n\nHDFS的HA由两个NameNode组成，一个是Active状态，另一个Standby。\n\n所有来自客户端的请求由Active状态的NameNode处理，Standby只同步Active状态NameNode的状态，一旦主节点（Active）发生故障就会借助Zookeeper实现自动的主备选举和切换，这样备用主节点就能立即接替故障节点并提供服务，而用户感觉不到明显的系统中断，使得整个系统更加高效可靠。\n\n共享存储系统即JournalNode集群，是实现NameNode高可用的最关键的部分，它保存了Name Node在运行过程中所产生的HDFS元数据，主备NameNode通过JornalNode实现元数据同步，在切换主备时，新的主NameNode在确认元数据完全同步之后才会提供服务，除此之外还需要共享HDFS数据块和DataNode之间的映射关系，DATaNode向主备NameNode上报数据块位置信息。\n","source":"_posts/BigData/大数据之HDFS.md","raw":"---\ntitle: HDFS高可用之HA架构\ntags:\n  - BigData\n  - HDFS\n  - 大数据\n  - 数据仓库\ncategories:\n  - - BigData\n---\n\n### 一、NameNode故障导致的问题\n\n1.NameNode机器宕机，导致整个集群不可用，重启NameNode后才可使用，\n\n2.NameNode机器软硬件升级，导致集群不可用\n\n以上两种情况会导致HDFS系统无法使用，为解决以上的问题Hadoop2.0推出了HDFS的高可用（HA）解决方案。\n\n\n\n### 二、HA高可用\n\nHDFS的HA由两个NameNode组成，一个是Active状态，另一个Standby。\n\n所有来自客户端的请求由Active状态的NameNode处理，Standby只同步Active状态NameNode的状态，一旦主节点（Active）发生故障就会借助Zookeeper实现自动的主备选举和切换，这样备用主节点就能立即接替故障节点并提供服务，而用户感觉不到明显的系统中断，使得整个系统更加高效可靠。\n\n共享存储系统即JournalNode集群，是实现NameNode高可用的最关键的部分，它保存了Name Node在运行过程中所产生的HDFS元数据，主备NameNode通过JornalNode实现元数据同步，在切换主备时，新的主NameNode在确认元数据完全同步之后才会提供服务，除此之外还需要共享HDFS数据块和DataNode之间的映射关系，DATaNode向主备NameNode上报数据块位置信息。\n","slug":"BigData/大数据之HDFS","published":1,"date":"2024-11-01T12:13:21.890Z","updated":"2024-11-01T12:53:20.506Z","_id":"cm2ypa5jc0000ngv2dk2v39al","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"一、NameNode故障导致的问题\"><a href=\"#一、NameNode故障导致的问题\" class=\"headerlink\" title=\"一、NameNode故障导致的问题\"></a>一、NameNode故障导致的问题</h3><p>1.NameNode机器宕机，导致整个集群不可用，重启NameNode后才可使用，</p>\n<p>2.NameNode机器软硬件升级，导致集群不可用</p>\n<p>以上两种情况会导致HDFS系统无法使用，为解决以上的问题Hadoop2.0推出了HDFS的高可用（HA）解决方案。</p>\n<h3 id=\"二、HA高可用\"><a href=\"#二、HA高可用\" class=\"headerlink\" title=\"二、HA高可用\"></a>二、HA高可用</h3><p>HDFS的HA由两个NameNode组成，一个是Active状态，另一个Standby。</p>\n<p>所有来自客户端的请求由Active状态的NameNode处理，Standby只同步Active状态NameNode的状态，一旦主节点（Active）发生故障就会借助Zookeeper实现自动的主备选举和切换，这样备用主节点就能立即接替故障节点并提供服务，而用户感觉不到明显的系统中断，使得整个系统更加高效可靠。</p>\n<p>共享存储系统即JournalNode集群，是实现NameNode高可用的最关键的部分，它保存了Name Node在运行过程中所产生的HDFS元数据，主备NameNode通过JornalNode实现元数据同步，在切换主备时，新的主NameNode在确认元数据完全同步之后才会提供服务，除此之外还需要共享HDFS数据块和DataNode之间的映射关系，DATaNode向主备NameNode上报数据块位置信息。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、NameNode故障导致的问题\"><a href=\"#一、NameNode故障导致的问题\" class=\"headerlink\" title=\"一、NameNode故障导致的问题\"></a>一、NameNode故障导致的问题</h3><p>1.NameNode机器宕机，导致整个集群不可用，重启NameNode后才可使用，</p>\n<p>2.NameNode机器软硬件升级，导致集群不可用</p>\n<p>以上两种情况会导致HDFS系统无法使用，为解决以上的问题Hadoop2.0推出了HDFS的高可用（HA）解决方案。</p>\n<h3 id=\"二、HA高可用\"><a href=\"#二、HA高可用\" class=\"headerlink\" title=\"二、HA高可用\"></a>二、HA高可用</h3><p>HDFS的HA由两个NameNode组成，一个是Active状态，另一个Standby。</p>\n<p>所有来自客户端的请求由Active状态的NameNode处理，Standby只同步Active状态NameNode的状态，一旦主节点（Active）发生故障就会借助Zookeeper实现自动的主备选举和切换，这样备用主节点就能立即接替故障节点并提供服务，而用户感觉不到明显的系统中断，使得整个系统更加高效可靠。</p>\n<p>共享存储系统即JournalNode集群，是实现NameNode高可用的最关键的部分，它保存了Name Node在运行过程中所产生的HDFS元数据，主备NameNode通过JornalNode实现元数据同步，在切换主备时，新的主NameNode在确认元数据完全同步之后才会提供服务，除此之外还需要共享HDFS数据块和DataNode之间的映射关系，DATaNode向主备NameNode上报数据块位置信息。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm0ywpern00002sv24vurbeeh","category_id":"cm0yvym1r0000cov28ttrbpi1","_id":"cm0ywpers00022sv20wfk6lof"},{"post_id":"cm0ywpern00002sv24vurbeeh","category_id":"cm0ywpf2j00032sv23a1y63o5","_id":"cm0ywpf2l00042sv2dt2x68gr"},{"post_id":"cm1w2y0dn0003jkv26r6u7o5i","category_id":"cm0yvym1r0000cov28ttrbpi1","_id":"cm1w2y6aq000098v2f1bqdhlu"},{"post_id":"cm1w2y0d90000jkv2fb7g1jew","category_id":"cm0yvym1r0000cov28ttrbpi1","_id":"cm1w2y6as000298v2248o2xtm"},{"post_id":"cm1w2y0d90000jkv2fb7g1jew","category_id":"cm1w2y6aq000198v24myf1ulk","_id":"cm1w2y6as000398v26qzj55iz"},{"post_id":"cm1xjgae50000oov25klw9mzh","category_id":"cm1xjgff10000jkv23jf4elbo","_id":"cm1xjgff30001jkv26bwdbcph"},{"post_id":"cm27wec880000c0v22ks82q7z","category_id":"cm27wei030000hcv25sffanwy","_id":"cm27wei050001hcv2amml1dze"},{"post_id":"cm2ypa5jc0000ngv2dk2v39al","category_id":"cm0yvym1r0000cov28ttrbpi1","_id":"cm2ypabuo0000y8v20lu7fit9"}],"PostTag":[{"post_id":"cm0ywpern00002sv24vurbeeh","tag_id":"cm0yvym1s0001cov2c197dagi","_id":"cm0ywpers00012sv26pikg8jo"},{"post_id":"cm1w2y0d90000jkv2fb7g1jew","tag_id":"cm1w2y0dl0001jkv27lbt4st5","_id":"cm1w2y0dn0002jkv289jwbk3q"},{"post_id":"cm1w2y0dn0003jkv26r6u7o5i","tag_id":"cm1w2y0do0004jkv20j8e5pqa","_id":"cm1w2y0do0005jkv24c8odm4v"},{"post_id":"cm1xjgae50000oov25klw9mzh","tag_id":"cm1xjo80f0000gkv23jnn6kts","_id":"cm1xjo80r0002gkv2d2zugatv"},{"post_id":"cm1xjgae50000oov25klw9mzh","tag_id":"cm1xjo80r0001gkv2dop0hg95","_id":"cm1xjo80r0003gkv2bcg89dqz"},{"post_id":"cm27wec880000c0v22ks82q7z","tag_id":"cm27wec8g0001c0v28xbne06d","_id":"cm27wec8i0003c0v2fhvm8rnw"},{"post_id":"cm27wec880000c0v22ks82q7z","tag_id":"cm27wec8h0002c0v2em0vbuzm","_id":"cm27wec8i0004c0v2h960cw71"},{"post_id":"cm2ypa5jc0000ngv2dk2v39al","tag_id":"cm27wec8g0001c0v28xbne06d","_id":"cm2ypa5jj0003ngv289sw44kd"},{"post_id":"cm2ypa5jc0000ngv2dk2v39al","tag_id":"cm2ypa5jh0001ngv205ggdmp0","_id":"cm2ypa5jj0004ngv29kkh5h6n"},{"post_id":"cm2ypa5jc0000ngv2dk2v39al","tag_id":"cm2ypa5jj0002ngv29tht8qvd","_id":"cm2ypa5jj0005ngv2dr8c1s8m"},{"post_id":"cm2ypa5jc0000ngv2dk2v39al","tag_id":"cm1w2y0do0004jkv20j8e5pqa","_id":"cm2ypchpy0001y8v212eqhked"}],"Tag":[{"name":"-Injury -Fight -Shocking","_id":"cm0yvuios0005v8v23vn23a53"},{"name":"ada","_id":"cm0yvwgl60000qsv2dyrd3633"},{"name":"123","_id":"cm0yvwgl70001qsv2fu9g28zq"},{"name":"DataX","_id":"cm0yvym1s0001cov2c197dagi"},{"name":"spark","_id":"cm1w2y0dl0001jkv27lbt4st5"},{"name":"数据仓库","_id":"cm1w2y0do0004jkv20j8e5pqa"},{"name":"-hack -apple music","_id":"cm1xjgaec0001oov2f6v29f3m"},{"name":"--hack --apple music","_id":"cm1xjii2d0002jkv2dish94ir"},{"name":"hack","_id":"cm1xjo80f0000gkv23jnn6kts"},{"name":"apple music","_id":"cm1xjo80r0001gkv2dop0hg95"},{"name":"BigData","_id":"cm27wec8g0001c0v28xbne06d"},{"name":"电商数仓6.0","_id":"cm27wec8h0002c0v2em0vbuzm"},{"name":"HDFS","_id":"cm2ypa5jh0001ngv205ggdmp0"},{"name":"大数据","_id":"cm2ypa5jj0002ngv29tht8qvd"}]}}